#!/usr/bin/env python3
# -*- mode: python; coding: utf-8 -*-
# By HarJIT in 2019, 2020, 2022, 2024, 2025.

# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

from ecma35.data import graphdata
from ecma35.data.singlebyte import sbmapparsers as parsers

# NATS Supplement, for Nordic languages when the primary set is NATS Sweden/Finland
# Allocations rather clever: if interpreted as the primary set (i.e. single-shift not recognised),
#   - The Danish aesh and oethel (Æ, Ø) become the Swedish aesh and oethel (Ä, Ö).
#   - The A-grave, E-acute and U-umlaut lose their diacritics but keep their base letters.
#   - The D-stroke (in the reg never called an eth nor shown curly) becomes a regular D.
#   - The thorn becomes a P. This is the least clever of the seven (Y would have been cleverer).
graphdata.gsets["ir008-2"] = (94, 1,
    (None,) * 32 +
    ((0xC0,), None, None, (0x0110,), (0xC9,)) + (None,) * 10 + ((0xDE,), None, None, None, None, 
        (0xDC,), None, None, None, None, None, (0xC6,), (0xD8,), None, None) +
    (None, None) +
    ((0xE0,), None, None, (0x0111,), (0xE9,)) + (None,) * 10 + ((0xFE,), None, None, None, None, 
        (0xFC,), None, None, None, None, None, (0xE6,), (0xF8,), None, None))

# NATS Supplement, for Nordic languages when the primary set is NATS Denmark/Norway
# Same as the other one, but with Swedish aesh/oethel (and the Danish ones in the primary set), as
#   opposed to _vice versa_.
graphdata.gsets["ir009-2"] = (94, 1,
    (None,) * 32 +
    ((0xC0,), None, None, (0x0110,), (0xC9,)) + (None,) * 10 + ((0xDE,), None, None, None, None, 
        (0xDC,), None, None, None, None, None, (0xC4,), (0xD6,), None, None) +
    (None, None) +
    ((0xE0,), None, None, (0x0111,), (0xE9,)) + (None,) * 10 + ((0xFE,), None, None, None, None, 
        (0xFC,), None, None, None, None, None, (0xE4,), (0xF6,), None, None))

# DIN-31625 ISO-6438 African Latin supplement
graphdata.gsets["ir039"] = (94, 1, (
               None,      (0x0181,), (0x0187,), (0x018A,), (0x0189,), None,      (0x0190,),
    (0x018E,), None,      (0x0191,), (0x0193,), (0x0194,), (0x0126,), None,      (0x0197,),
    None,      None,      (0x0253,), (0x0188,), (0x0257,), (0x0256,), None,      (0x025B,),
    (0x0259,), None,      (0x0192,), (0x0260,), (0x0263,), (0x0127,), None,      (0x026A,),
    (0x0198,), None,      None,      None,      None,      None,      None,      (0x014A,),
    None,      (0x019F,), (0x0186,), (0x01A4,), None,      None,      None,      (0x01A9,),
    (0x0199,), (0x026C,), None,      (0x0271,), None,      (0x0273,), (0x0272,), (0x014B,),
    None,      (0x0275,), (0x0254,), (0x01A5,), None,      (0x027D,), None,      (0x0283,),
    (0x01AC,), (0x01AE,), None,      (0x01B1,), (0x01B2,), (0xA7B3,), (0x01B3,), (0x01B7,),
    None,      None,      None,      None,      None,      None,      None,      None,
    (0x01AD,), (0x0288,), None,      (0x028A,), (0x028B,), (0xAB53,), (0x01B4,), (0x0292,),
    (0x0295,), (0x0294,), (0x0298,), (0x01C0,), (0x01C2,), (0x01C3,), (0x01C1,),
))

graphdata.chcpdocs['65504'] = 'ecma-35'
graphdata.defgsets['65504'] = ('ir006', 'ir039', 'nil', 'nil')

# ECMA-94-L1 ISO-8859-1 Latin-1 Western European RHS
_latin1_iso = tuple((i,) for i in range(0xA0, 0x100))
graphdata.gsets["ir100"] = (96, 1, _latin1_iso)
graphdata.chcpdocs['819'] = graphdata.chcpdocs['5100'] = 'ecma-35'
graphdata.defgsets['819'] = graphdata.defgsets['5100'] = ('ir006', 'ir100', 'nil', 'nil')
_latin1_1985 = _latin1_iso[:55] + (None,) + _latin1_iso[56:87] + (None,) + _latin1_iso[88:]
graphdata.gsets["ir100/1985"] = (96, 1, _latin1_1985)
_latin1_brazil = _latin1_iso[:55] + ((0x0152,),) + _latin1_iso[56:87] + ((0x0153,),) + _latin1_iso[88:]
graphdata.gsets["ir100/abnt"] = (96, 1, _latin1_brazil)

# DEC Multinational Character Set (MCS); direct precursor to ISO-8859-1.
graphdata.gsets["decmultinational"] = (94, 1, tuple((i,) if i else None for i in (
                     0x00A1, 0x00A2, 0x00A3, None,   0x00A5, None,   0x00A7, 
             0x00A4, 0x00A9, 0x00AA, 0x00AB, None,   None,   None,   None, 
             0x00B0, 0x00B1, 0x00B2, 0x00B3, None,   0x00B5, 0x00B6, 0x00B7, 
             None,   0x00B9, 0x00BA, 0x00BB, 0x00BC, 0x00BD, None,   0x00BF, 
             0x00C0, 0x00C1, 0x00C2, 0x00C3, 0x00C4, 0x00C5, 0x00C6, 0x00C7, 
             0x00C8, 0x00C9, 0x00CA, 0x00CB, 0x00CC, 0x00CD, 0x00CE, 0x00CF, 
             None,   0x00D1, 0x00D2, 0x00D3, 0x00D4, 0x00D5, 0x00D6, 0x0152, 
             0x00D8, 0x00D9, 0x00DA, 0x00DB, 0x00DC, 0x0178, None,   0x00DF, 
             0x00E0, 0x00E1, 0x00E2, 0x00E3, 0x00E4, 0x00E5, 0x00E6, 0x00E7, 
             0x00E8, 0x00E9, 0x00EA, 0x00EB, 0x00EC, 0x00ED, 0x00EE, 0x00EF, 
             None,   0x00F1, 0x00F2, 0x00F3, 0x00F4, 0x00F5, 0x00F6, 0x0153, 
             0x00F8, 0x00F9, 0x00FA, 0x00FB, 0x00FC, 0x00FF, None)))
graphdata.chcpdocs['1100'] = 'ecma-35'
graphdata.defgsets['1100'] = ('ir006', 'decmultinational', 'nil', 'nil')

# ECMA-94-L2 ISO-8859-2 Latin-2 Central European RHS (RHS of IBM code page 912)
graphdata.gsets["ir101"] = (96, 1, tuple((i,) for i in (
             0x00A0, 0x0104, 0x02D8, 0x0141, 0x00A4, 0x013D, 0x015A, 0x00A7, 
             0x00A8, 0x0160, 0x015E, 0x0164, 0x0179, 0x00AD, 0x017D, 0x017B, 
             0x00B0, 0x0105, 0x02DB, 0x0142, 0x00B4, 0x013E, 0x015B, 0x02C7, 
             0x00B8, 0x0161, 0x015F, 0x0165, 0x017A, 0x02DD, 0x017E, 0x017C, 
             0x0154, 0x00C1, 0x00C2, 0x0102, 0x00C4, 0x0139, 0x0106, 0x00C7, 
             0x010C, 0x00C9, 0x0118, 0x00CB, 0x011A, 0x00CD, 0x00CE, 0x010E, 
             0x0110, 0x0143, 0x0147, 0x00D3, 0x00D4, 0x0150, 0x00D6, 0x00D7, 
             0x0158, 0x016E, 0x00DA, 0x0170, 0x00DC, 0x00DD, 0x0162, 0x00DF, 
             0x0155, 0x00E1, 0x00E2, 0x0103, 0x00E4, 0x013A, 0x0107, 0x00E7, 
             0x010D, 0x00E9, 0x0119, 0x00EB, 0x011B, 0x00ED, 0x00EE, 0x010F, 
             0x0111, 0x0144, 0x0148, 0x00F3, 0x00F4, 0x0151, 0x00F6, 0x00F7, 
             0x0159, 0x016F, 0x00FA, 0x0171, 0x00FC, 0x00FD, 0x0163, 0x02D9)))
graphdata.chcpdocs['912'] = 'ecma-35'
graphdata.defgsets['912'] = ('ir006', 'ir101', 'nil', 'nil')

# ECMA-94-L2 ISO-8859-2 with overring rather than degrees sign (RHS of IBM code page 1111)
graphdata.gsets["ir101/overring"] = (96, 1, tuple((i,) for i in (
             0x00A0, 0x0104, 0x02D8, 0x0141, 0x00A4, 0x013D, 0x015A, 0x00A7, 
             0x00A8, 0x0160, 0x015E, 0x0164, 0x0179, 0x00AD, 0x017D, 0x017B, 
             0x02DA, 0x0105, 0x02DB, 0x0142, 0x00B4, 0x013E, 0x015B, 0x02C7, 
             0x00B8, 0x0161, 0x015F, 0x0165, 0x017A, 0x02DD, 0x017E, 0x017C, 
             0x0154, 0x00C1, 0x00C2, 0x0102, 0x00C4, 0x0139, 0x0106, 0x00C7, 
             0x010C, 0x00C9, 0x0118, 0x00CB, 0x011A, 0x00CD, 0x00CE, 0x010E, 
             0x0110, 0x0143, 0x0147, 0x00D3, 0x00D4, 0x0150, 0x00D6, 0x00D7, 
             0x0158, 0x016E, 0x00DA, 0x0170, 0x00DC, 0x00DD, 0x0162, 0x00DF, 
             0x0155, 0x00E1, 0x00E2, 0x0103, 0x00E4, 0x013A, 0x0107, 0x00E7, 
             0x010D, 0x00E9, 0x0119, 0x00EB, 0x011B, 0x00ED, 0x00EE, 0x010F, 
             0x0111, 0x0144, 0x0148, 0x00F3, 0x00F4, 0x0151, 0x00F6, 0x00F7, 
             0x0159, 0x016F, 0x00FA, 0x0171, 0x00FC, 0x00FD, 0x0163, 0x02D9)))
graphdata.chcpdocs['1111'] = 'ecma-35'
graphdata.defgsets['1111'] = ('ir006', 'ir101/overring', 'nil', 'nil')

# ECMA-94-L3 ISO-8859-3 Latin-3 South European RHS
graphdata.gsets["ir109"] = (96, 1, tuple((i,) if i else None for i in (
             0x00A0, 0x0126, 0x02D8, 0x00A3, 0x00A4, None,   0x0124, 0x00A7, 
             0x00A8, 0x0130, 0x015E, 0x011E, 0x0134, 0x00AD, None,   0x017B, 
             0x00B0, 0x0127, 0x00B2, 0x00B3, 0x00B4, 0x00B5, 0x0125, 0x00B7, 
             0x00B8, 0x0131, 0x015F, 0x011F, 0x0135, 0x00BD, None,   0x017C, 
             0x00C0, 0x00C1, 0x00C2, None,   0x00C4, 0x010A, 0x0108, 0x00C7, 
             0x00C8, 0x00C9, 0x00CA, 0x00CB, 0x00CC, 0x00CD, 0x00CE, 0x00CF, 
             None,   0x00D1, 0x00D2, 0x00D3, 0x00D4, 0x0120, 0x00D6, 0x00D7, 
             0x011C, 0x00D9, 0x00DA, 0x00DB, 0x00DC, 0x016C, 0x015C, 0x00DF, 
             0x00E0, 0x00E1, 0x00E2, None,   0x00E4, 0x010B, 0x0109, 0x00E7, 
             0x00E8, 0x00E9, 0x00EA, 0x00EB, 0x00EC, 0x00ED, 0x00EE, 0x00EF, 
             None,   0x00F1, 0x00F2, 0x00F3, 0x00F4, 0x0121, 0x00F6, 0x00F7, 
             0x011D, 0x00F9, 0x00FA, 0x00FB, 0x00FC, 0x016D, 0x015D, 0x02D9)))
graphdata.chcpdocs['913'] = 'ecma-35'
graphdata.defgsets['913'] = ('ir006', 'ir109', 'nil', 'nil')

# ECMA-94-L4 ISO-8859-4 Latin-4 North European RHS
graphdata.gsets["ir110"] = (96, 1, tuple((i,) for i in (
             0x00A0, 0x0104, 0x0138, 0x0156, 0x00A4, 0x0128, 0x013B, 0x00A7, 
             0x00A8, 0x0160, 0x0112, 0x0122, 0x0166, 0x00AD, 0x017D, 0x00AF, 
             0x00B0, 0x0105, 0x02DB, 0x0157, 0x00B4, 0x0129, 0x013C, 0x02C7, 
             0x00B8, 0x0161, 0x0113, 0x0123, 0x0167, 0x014A, 0x017E, 0x014B, 
             0x0100, 0x00C1, 0x00C2, 0x00C3, 0x00C4, 0x00C5, 0x00C6, 0x012E, 
             0x010C, 0x00C9, 0x0118, 0x00CB, 0x0116, 0x00CD, 0x00CE, 0x012A, 
             0x0110, 0x0145, 0x014C, 0x0136, 0x00D4, 0x00D5, 0x00D6, 0x00D7, 
             0x00D8, 0x0172, 0x00DA, 0x00DB, 0x00DC, 0x0168, 0x016A, 0x00DF, 
             0x0101, 0x00E1, 0x00E2, 0x00E3, 0x00E4, 0x00E5, 0x00E6, 0x012F, 
             0x010D, 0x00E9, 0x0119, 0x00EB, 0x0117, 0x00ED, 0x00EE, 0x012B, 
             0x0111, 0x0146, 0x014D, 0x0137, 0x00F4, 0x00F5, 0x00F6, 0x00F7, 
             0x00F8, 0x0173, 0x00FA, 0x00FB, 0x00FC, 0x0169, 0x016B, 0x02D9)))
graphdata.chcpdocs['914'] = 'ecma-35'
graphdata.defgsets['914'] = ('ir006', 'ir110', 'nil', 'nil')

# Right-hand side of Canadian Standard CSA Z243.4:1985 8-bit set (English/French)
graphdata.gsets["ir123"] = (96, 1, (
    (0xA0,),   (0xA1,),   (0xA8,),   (0xA3,),   (0xA2,),   (0xA5,),   (0xB1,),   (0xB4,), 
    (0x207D,), (0x207E,), (0xBD,),   (0x207A,), (0xB8,),   (0xAD,),   (0xB7,),   (0x207B,), 
    (0x2070,), (0xB9,),   (0xB2,),   (0xB3,),   (0x2074,), (0x2075,), (0x2076,), (0x2077,), 
    (0x2078,), (0x2079,), (0xBC,),   (0xBE,),   (0x2264,), (0x2260,), (0x2265,), (0xBF,), 
    (0xC0,),   (0xC1,),   (0xC2,),   (0xC7,),   (0xC8,),   (0xC9,),   (0xCA,),   (0xCB,), 
    (0xCD,),   (0xCE,),   (0xCF,),   (0xD1,),   (0xD3,),   (0xD4,),   (0xD9,),   (0xDA,), 
    (0xDB,),   (0xDC,),   (0xAE,),   (0xA7,),   (0xB6,),   (0xB5,),   (0xAA,),   (0xBA,), 
    (0x2018,), (0x2019,), (0x201C,), (0x201D,), (0xAB,),   (0xBB,),   (0xB0,),   (0xA6,), 
    (0xE0,),   (0xE1,),   (0xE2,),   (0xE7,),   (0xE8,),   (0xE9,),   (0xEA,),   (0xEB,), 
    (0xED,),   (0xEE,),   (0xEF,),   (0xF1,),   (0xF3,),   (0xF4,),   (0xF9,),   (0xFA,), 
    (0xFB,),   (0xFC,),   (0xA9,),   (0x2500,), (0x2502,), (0x2514,), (0x2518,), (0x2510,), 
    (0x250C,), (0x251C,), (0x2534,), (0x2524,), (0x252C,), (0x253C,), (0xAC,),   (0x2588,),
))

graphdata.chcpdocs['65501'] = 'ecma-35'
graphdata.defgsets['65501'] = ('ir006', 'ir123', 'nil', 'nil')

# ČSN 369103 (minor Latin-2 mod for RHS use with previous IRV, i.e. swapping ¤ and $)
graphdata.gsets["ir139"] = (96, 1, tuple((i,) for i in (
             0x00A0, 0x0104, 0x02D8, 0x0141, 0x0024, 0x013D, 0x015A, 0x00A7, 
             0x00A8, 0x0160, 0x015E, 0x0164, 0x0179, 0x00AD, 0x017D, 0x017B, 
             0x00B0, 0x0105, 0x02DB, 0x0142, 0x00B4, 0x013E, 0x015B, 0x02C7, 
             0x00B8, 0x0161, 0x015F, 0x0165, 0x017A, 0x02DD, 0x017E, 0x017C, 
             0x0154, 0x00C1, 0x00C2, 0x0102, 0x00C4, 0x0139, 0x0106, 0x00C7, 
             0x010C, 0x00C9, 0x0118, 0x00CB, 0x011A, 0x00CD, 0x00CE, 0x010E, 
             0x0110, 0x0143, 0x0147, 0x00D3, 0x00D4, 0x0150, 0x00D6, 0x00D7, 
             0x0158, 0x016E, 0x00DA, 0x0170, 0x00DC, 0x00DD, 0x0162, 0x00DF, 
             0x0155, 0x00E1, 0x00E2, 0x0103, 0x00E4, 0x013A, 0x0107, 0x00E7, 
             0x010D, 0x00E9, 0x0119, 0x00EB, 0x011B, 0x00ED, 0x00EE, 0x010F, 
             0x0111, 0x0144, 0x0148, 0x00F3, 0x00F4, 0x0151, 0x00F6, 0x00F7, 
             0x0159, 0x016F, 0x00FA, 0x0171, 0x00FC, 0x00FD, 0x0163, 0x02D9)))

# ECMA-128 ISO-8859-9 Latin-5 Turkish RHS
latin5 = tuple((i,) for i in (
             0x00A0, 0x00A1, 0x00A2, 0x00A3, 0x00A4, 0x00A5, 0x00A6, 0x00A7, 
             0x00A8, 0x00A9, 0x00AA, 0x00AB, 0x00AC, 0x00AD, 0x00AE, 0x00AF, 
             0x00B0, 0x00B1, 0x00B2, 0x00B3, 0x00B4, 0x00B5, 0x00B6, 0x00B7, 
             0x00B8, 0x00B9, 0x00BA, 0x00BB, 0x00BC, 0x00BD, 0x00BE, 0x00BF, 
             0x00C0, 0x00C1, 0x00C2, 0x00C3, 0x00C4, 0x00C5, 0x00C6, 0x00C7, 
             0x00C8, 0x00C9, 0x00CA, 0x00CB, 0x00CC, 0x00CD, 0x00CE, 0x00CF, 
             0x011E, 0x00D1, 0x00D2, 0x00D3, 0x00D4, 0x00D5, 0x00D6, 0x00D7, 
             0x00D8, 0x00D9, 0x00DA, 0x00DB, 0x00DC, 0x0130, 0x015E, 0x00DF, 
             0x00E0, 0x00E1, 0x00E2, 0x00E3, 0x00E4, 0x00E5, 0x00E6, 0x00E7, 
             0x00E8, 0x00E9, 0x00EA, 0x00EB, 0x00EC, 0x00ED, 0x00EE, 0x00EF, 
             0x011F, 0x00F1, 0x00F2, 0x00F3, 0x00F4, 0x00F5, 0x00F6, 0x00F7, 
             0x00F8, 0x00F9, 0x00FA, 0x00FB, 0x00FC, 0x0131, 0x015F, 0x00FF))
graphdata.gsets["ir148"] = (96, 1, latin5)
graphdata.gsets["ir148/azeri"
    ] = (96, 1, latin5[:38] + ((0x018F,),) + latin5[39:70] + ((0x0259,),) + latin5[71:])
graphdata.chcpdocs['920'] = 'ecma-35'
graphdata.defgsets['920'] = ('ir006', 'ir148', 'nil', 'nil')

# DEC 8-bit Turkish; roughly to ISO-8859-9 as DEC MCS is to ISO-8859-1 (note that the coding for
#   the non-ASCII dotless/dotted I letters differs from ISO-8859-9 although the others do not)
graphdata.gsets["decturkish8"] = (94, 1, tuple((i,) if i else None for i in (
                     0x00A1, 0x00A2, 0x00A3, None,   0x00A5, None,   0x00A7, 
             0x00A4, 0x00A9, 0x00AA, 0x00AB, None,   None,   0x0130, None, 
             0x00B0, 0x00B1, 0x00B2, 0x00B3, None,   0x00B5, 0x00B6, 0x00B7, 
             None,   0x00B9, 0x00BA, 0x00BB, 0x00BC, 0x00BD, 0x0131, 0x00BF, 
             0x00C0, 0x00C1, 0x00C2, 0x00C3, 0x00C4, 0x00C5, 0x00C6, 0x00C7, 
             0x00C8, 0x00C9, 0x00CA, 0x00CB, 0x00CC, 0x00CD, 0x00CE, 0x00CF, 
             0x011E, 0x00D1, 0x00D2, 0x00D3, 0x00D4, 0x00D5, 0x00D6, 0x0152, 
             0x00D8, 0x00D9, 0x00DA, 0x00DB, 0x00DC, 0x0178, 0x015E, 0x00DF, 
             0x00E0, 0x00E1, 0x00E2, 0x00E3, 0x00E4, 0x00E5, 0x00E6, 0x00E7, 
             0x00E8, 0x00E9, 0x00EA, 0x00EB, 0x00EC, 0x00ED, 0x00EE, 0x00EF, 
             0x011F, 0x00F1, 0x00F2, 0x00F3, 0x00F4, 0x00F5, 0x00F6, 0x0153, 
             0x00F8, 0x00F9, 0x00FA, 0x00FB, 0x00FC, 0x00FF, 0x015F)))

# DEC 8-bit Turkish with NBSP (RHS of IBM code page 1288)
graphdata.gsets["decturkish8/nbsp"] = (96, 1, tuple((i,) if i else None for i in (
             0x00A0,  0x00A1, 0x00A2, 0x00A3, None,   0x00A5, None,   0x00A7, 
             0x00A4, 0x00A9, 0x00AA, 0x00AB, None,   None,   0x0130, None, 
             0x00B0, 0x00B1, 0x00B2, 0x00B3, None,   0x00B5, 0x00B6, 0x00B7, 
             None,   0x00B9, 0x00BA, 0x00BB, 0x00BC, 0x00BD, 0x0131, 0x00BF, 
             0x00C0, 0x00C1, 0x00C2, 0x00C3, 0x00C4, 0x00C5, 0x00C6, 0x00C7, 
             0x00C8, 0x00C9, 0x00CA, 0x00CB, 0x00CC, 0x00CD, 0x00CE, 0x00CF, 
             0x011E, 0x00D1, 0x00D2, 0x00D3, 0x00D4, 0x00D5, 0x00D6, 0x0152, 
             0x00D8, 0x00D9, 0x00DA, 0x00DB, 0x00DC, 0x0178, 0x015E, 0x00DF, 
             0x00E0, 0x00E1, 0x00E2, 0x00E3, 0x00E4, 0x00E5, 0x00E6, 0x00E7, 
             0x00E8, 0x00E9, 0x00EA, 0x00EB, 0x00EC, 0x00ED, 0x00EE, 0x00EF, 
             0x011F, 0x00F1, 0x00F2, 0x00F3, 0x00F4, 0x00F5, 0x00F6, 0x0153, 
             0x00F8, 0x00F9, 0x00FA, 0x00FB, 0x00FC, 0x00FF, 0x015F, None)))
graphdata.chcpdocs['1288'] = 'ecma-35'
graphdata.defgsets['1288'] = ('ir006', 'decturkish8/nbsp', 'nil', 'nil')

# ISO 10367 supplementary set (containing characters in neither ISO-8859-2 nor the intersection
#   of ISO-8859-1 and ISO-8859-9, but listed in Annex A of T.51; intended for use in a G3 set).
#   Contrast IR-152.
graphdata.gsets["ir154"] = (96, 1, (
    None,      None,      (0x0100,), (0x0108,), (0x010A,), None,      (0x0116,), (0x0112,), 
    (0x011C,), (0x2018,), (0x201C,), (0x2122,), (0x2190,), (0x2191,), (0x2192,), (0x2193,), 
    None,      None,      (0x0101,), (0x0109,), (0x010B,), (0xF0,),   (0x0117,), (0x0113,), 
    (0x011D,), (0x2019,), (0x201D,), (0x266A,), (0x215B,), (0x215C,), (0x215D,), (0x215E,), 
    None,      (0x011E,), (0x0120,), (0x0122,), (0x0124,), (0x0126,), (0x0128,), (0x0130,), 
    (0x012A,), (0x012E,), (0x0132,), (0x0134,), (0x0136,), (0x013B,), (0x013F,), (0x0145,), 
    # 0x2015 per WG3 N 454: http://open-std.org/JTC1/sc2/wg3/docs/n454.pdf
    (0x2015,), (0x014A,), (0x014C,), (0x0152,), (0x0156,), (0x015C,), (0x0166,), (0xDE,),   
    (0x0168,), (0x016C,), (0x016A,), (0x0172,), (0x0174,), (0xDD,),   (0x0176,), (0x0178,), 
    (0x2126,), (0x011F,), (0x0121,), (0x0123,), (0x0125,), (0x0127,), (0x0129,), (0x0131,), 
    (0x012B,), (0x012F,), (0x0133,), (0x0135,), (0x0137,), (0x013C,), (0x0140,), (0x0146,), 
    (0x0138,), (0x014B,), (0x014D,), (0x0153,), (0x0157,), (0x015D,), (0x0167,), (0xFE,),   
    (0x0169,), (0x016D,), (0x016B,), (0x0173,), (0x0175,), (0xFD,),   (0x0177,), (0x0149,),
))

# ECMA-144 ISO-8859-10 Latin-6 Nordic RHS
graphdata.gsets["ir157"] = (96, 1, tuple((i,) for i in (
             0x00A0, 0x0104, 0x0112, 0x0122, 0x012A, 0x0128, 0x0136, 0x00A7, 
             0x013B, 0x0110, 0x0160, 0x0166, 0x017D, 0x00AD, 0x016A, 0x014A, 
             0x00B0, 0x0105, 0x0113, 0x0123, 0x012B, 0x0129, 0x0137, 0x00B7, 
             0x013C, 0x0111, 0x0161, 0x0167, 0x017E, 0x2015, 0x016B, 0x014B, 
             0x0100, 0x00C1, 0x00C2, 0x00C3, 0x00C4, 0x00C5, 0x00C6, 0x012E, 
             0x010C, 0x00C9, 0x0118, 0x00CB, 0x0116, 0x00CD, 0x00CE, 0x00CF, 
             0x00D0, 0x0145, 0x014C, 0x00D3, 0x00D4, 0x00D5, 0x00D6, 0x0168, 
             0x00D8, 0x0172, 0x00DA, 0x00DB, 0x00DC, 0x00DD, 0x00DE, 0x00DF, 
             0x0101, 0x00E1, 0x00E2, 0x00E3, 0x00E4, 0x00E5, 0x00E6, 0x012F, 
             0x010D, 0x00E9, 0x0119, 0x00EB, 0x0117, 0x00ED, 0x00EE, 0x00EF, 
             0x00F0, 0x0146, 0x014D, 0x00F3, 0x00F4, 0x00F5, 0x00F6, 0x0169, 
             0x00F8, 0x0173, 0x00FA, 0x00FB, 0x00FC, 0x00FD, 0x00FE, 0x0138)))
graphdata.chcpdocs['919'] = 'ecma-35'
graphdata.defgsets['919'] = ('ir006', 'ir157', 'nil', 'nil')

# Single-shift supplement to ISO-8859-6 for Saami; the infamous "High Ogonek" set
graphdata.gsets["ir158"] = (96, 1, (
    (0x00B4,), None,      None,      None,      None,      None,      None,      None,
    None,      None,      None,      None,      None,      None,      None,      None,
    (0x02BD,), None,      None,      None,      None,      None,      None,      None,
    None,      None,      None,      None,      None,      None,      None,      None,
    (0x0102,), (0xC0,),   (0x01DE,), (0x01E0,), (0x01E2,), (0x0114,), (0xC8,),   (0x01E4,),
    (0x01E6,), (0x01E8,), (0x014E,), (0xD2,),   (0x01EA,), (0x01EC,), (0x01B7,), (0x01EE,),
    None,      None,      None,      None,      None,      None,      None,      None,
    None,      None,      None,      None,      None,      None,      None,      None,
    (0x0103,), (0xE0,),   (0x01DF,), (0x01E1,), (0x01E3,), (0x0115,), (0xE8,),   (0x01E5,),
    (0x01E7,), (0x01E9,), (0x014F,), (0xF2,),   (0x01EB,), (0x01ED,), (0x0292,), (0x01EF,),
    None,      None,      None,      None,      None,      None,      None,      None,
    None,      None,      None,      None,      None,      None,      None,      None,
))

# ISO-8859-13 Latin-7 Baltic Rim RHS
graphdata.gsets["ir179"] = (96, 1, tuple((i,) for i in (
             0x00A0, 0x201D, 0x00A2, 0x00A3, 0x00A4, 0x201E, 0x00A6, 0x00A7, 
             0x00D8, 0x00A9, 0x0156, 0x00AB, 0x00AC, 0x00AD, 0x00AE, 0x00C6, 
             0x00B0, 0x00B1, 0x00B2, 0x00B3, 0x201C, 0x00B5, 0x00B6, 0x00B7, 
             0x00F8, 0x00B9, 0x0157, 0x00BB, 0x00BC, 0x00BD, 0x00BE, 0x00E6, 
             0x0104, 0x012E, 0x0100, 0x0106, 0x00C4, 0x00C5, 0x0118, 0x0112, 
             0x010C, 0x00C9, 0x0179, 0x0116, 0x0122, 0x0136, 0x012A, 0x013B, 
             0x0160, 0x0143, 0x0145, 0x00D3, 0x014C, 0x00D5, 0x00D6, 0x00D7, 
             0x0172, 0x0141, 0x015A, 0x016A, 0x00DC, 0x017B, 0x017D, 0x00DF, 
             0x0105, 0x012F, 0x0101, 0x0107, 0x00E4, 0x00E5, 0x0119, 0x0113, 
             0x010D, 0x00E9, 0x017A, 0x0117, 0x0123, 0x0137, 0x012B, 0x013C, 
             0x0161, 0x0144, 0x0146, 0x00F3, 0x014D, 0x00F5, 0x00F6, 0x00F7, 
             0x0173, 0x0142, 0x015B, 0x016B, 0x00FC, 0x017C, 0x017E, 0x2019)))
graphdata.chcpdocs['921'] = 'ecma-35'
graphdata.defgsets['921'] = ('ir006', 'ir179', 'nil', 'nil')

# Adaptation of ISO-8859-1 with Icelandic letters replaced with Estonian letters (similar in
#   concept to ISO-8859-9 but for Estonian rather than Turkish); RHS of IBM code page 922.
#   Encoding of Estonian letters matches ISO-8859-13.
graphdata.gsets["ibmestonian"] = (96, 1, ((160,), (161,), (162,), (163,), (164,), (165,), (166,), (167,), (168,), (169,), (170,), (171,), (172,), (173,), (174,), (175,), (176,), (177,), (178,), (179,), (180,), (181,), (182,), (183,), (184,), (185,), (186,), (187,), (188,), (189,), (190,), (191,), (192,), (193,), (194,), (195,), (196,), (197,), (198,), (199,), (200,), (201,), (202,), (203,), (204,), (205,), (206,), (207,), (352,), (209,), (210,), (211,), (212,), (213,), (214,), (215,), (216,), (217,), (218,), (219,), (220,), (221,), (381,), (223,), (224,), (225,), (226,), (227,), (228,), (229,), (230,), (231,), (232,), (233,), (234,), (235,), (236,), (237,), (238,), (239,), (353,), (241,), (242,), (243,), (244,), (245,), (246,), (247,), (248,), (249,), (250,), (251,), (252,), (253,), (382,), (255,)))
graphdata.chcpdocs['922'] = 'ecma-35'
graphdata.defgsets['922'] = ('ir006', 'ibmestonian', 'nil', 'nil')

# RHS of IBM code page 902 (Euro sign modification of IBM code page 922)
graphdata.gsets["ibmestonian/euro"] = (96, 1, ((160,), (161,), (162,), (163,), (8364,), (165,), (166,), (167,), (168,), (169,), (170,), (171,), (172,), (173,), (174,), (175,), (176,), (177,), (178,), (179,), (180,), (181,), (182,), (183,), (184,), (185,), (186,), (187,), (188,), (189,), (190,), (191,), (192,), (193,), (194,), (195,), (196,), (197,), (198,), (199,), (200,), (201,), (202,), (203,), (204,), (205,), (206,), (207,), (352,), (209,), (210,), (211,), (212,), (213,), (214,), (215,), (216,), (217,), (218,), (219,), (220,), (221,), (381,), (223,), (224,), (225,), (226,), (227,), (228,), (229,), (230,), (231,), (232,), (233,), (234,), (235,), (236,), (237,), (238,), (239,), (353,), (241,), (242,), (243,), (244,), (245,), (246,), (247,), (248,), (249,), (250,), (251,), (252,), (253,), (382,), (255,)))
graphdata.chcpdocs['902'] = 'ecma-35'
graphdata.defgsets['902'] = ('ir006', 'ibmestonian/euro', 'nil', 'nil')

# ISO 8859 Adaptation for Lithuanian, RHS
graphdata.gsets['lithuanian8'] = (96, 1, ((160,), (161,), (162,), (163,), (164,), (165,), (166,), (167,), (168,), (169,), (170,), (171,), (172,), (173,), (174,), (175,), (176,), (177,), (178,), (179,), (180,), (181,), (182,), (183,), (184,), (185,), (186,), (187,), (188,), (189,), (190,), (191,), (260,), (193,), (194,), (195,), (196,), (197,), (268,), (199,), (280,), (278,), (202,), (203,), (302,), (205,), (206,), (207,), (208,), (209,), (210,), (211,), (212,), (213,), (352,), (215,), (216,), (370,), (362,), (381,), (220,), (221,), (222,), (223,), (261,), (225,), (226,), (227,), (228,), (229,), (269,), (231,), (281,), (279,), (234,), (235,), (303,), (237,), (238,), (239,), (240,), (241,), (242,), (243,), (244,), (245,), (353,), (247,), (248,), (371,), (363,), (382,), (252,), (253,), (254,), (255,)))
graphdata.chcpdocs['63283'] = 'ecma-35'
graphdata.defgsets['63283'] = ('ir006', 'lithuanian8', 'nil', 'nil')

# ISO 8859 Adaptation for Welsh (ancestor to ISO-8859-14), RHS
graphdata.gsets["ir182"] = (96, 1, (
    (0xA0,), (0xA1,), (0xA2,), (0xA3,), (0xA4,), (0xA5,), (0xA6,), (0xA7,),
    (0x1E80,), (0xA9,), (0x1E82,), (0xAB,), (0x1EF2,), (0xAD,), (0xAE,), (0x0178,),
    (0xB0,), (0xB1,), (0xB2,), (0xB3,), (0xB4,), (0xB5,), (0xB6,), (0xB7,),
    (0x1E81,), (0xB9,), (0x1E83,), (0xBB,), (0x1EF3,), (0x1E84,), (0x1E85,), (0xBF,),
    (0xC0,), (0xC1,), (0xC2,), (0xC3,), (0xC4,), (0xC5,), (0xC6,), (0xC7,),
    (0xC8,), (0xC9,), (0xCA,), (0xCB,), (0xCC,), (0xCD,), (0xCE,), (0xCF,),
    (0x0174,), (0xD1,), (0xD2,), (0xD3,), (0xD4,), (0xD5,), (0xD6,), (0xD7,),
    (0xD8,), (0xD9,), (0xDA,), (0xDB,), (0xDC,), (0xDD,), (0x0176,), (0xDF,),
    (0xE0,), (0xE1,), (0xE2,), (0xE3,), (0xE4,), (0xE5,), (0xE6,), (0xE7,),
    (0xE8,), (0xE9,), (0xEA,), (0xEB,), (0xEC,), (0xED,), (0xEE,), (0xEF,),
    (0x0175,), (0xF1,), (0xF2,), (0xF3,), (0xF4,), (0xF5,), (0xF6,), (0xF7,),
    (0xF8,), (0xF9,), (0xFA,), (0xFB,), (0xFC,), (0xFD,), (0x0177,), (0xFF,),
))

# ISO 8859 Adaptation for Saami (RHS)
graphdata.gsets["ir197"] = (96, 1, (
    (0xA0,), (0x010C,), (0x010D,), (0x0110,), (0x0111,), (0x01E4,), (0x01E5,), (0xA7,),
    (0x01E6,), (0xA9,), (0x01E7,), (0xAB,), (0x01E8,), (0xAD,), (0x01E9,), (0x014A,),
    (0xB0,), (0x014B,), (0x0160,), (0x0161,), (0xB4,), (0x0166,), (0xB6,), (0xB7,),
    (0x0167,), (0x017D,), (0x017E,), (0xBB,), (0x01B7,), (0x0292,), (0x01EE,), (0x01EF,),
    (0xC0,), (0xC1,), (0xC2,), (0xC3,), (0xC4,), (0xC5,), (0xC6,), (0xC7,),
    (0xC8,), (0xC9,), (0xCA,), (0xCB,), (0xCC,), (0xCD,), (0xCE,), (0xCF,),
    (0xD0,), (0xD1,), (0xD2,), (0xD3,), (0xD4,), (0xD5,), (0xD6,), (0xD7,),
    (0xD8,), (0xD9,), (0xDA,), (0xDB,), (0xDC,), (0xDD,), (0xDE,), (0xDF,),
    (0xE0,), (0xE1,), (0xE2,), (0xE3,), (0xE4,), (0xE5,), (0xE6,), (0xE7,),
    (0xE8,), (0xE9,), (0xEA,), (0xEB,), (0xEC,), (0xED,), (0xEE,), (0xEF,),
    (0xF0,), (0xF1,), (0xF2,), (0xF3,), (0xF4,), (0xF5,), (0xF6,), (0xF7,),
    (0xF8,), (0xF9,), (0xFA,), (0xFB,), (0xFC,), (0xFD,), (0xFE,), (0xFF,),
))
graphdata.chcpdocs['59187'] = 'ecma-35'
graphdata.defgsets['59187'] = ('ir006', 'ir197', 'nil', 'nil')

# ISO-8859-14 Latin-8 Celtic RHS
graphdata.gsets["ir199"] = (96, 1, tuple((i,) for i in (
             0x00A0, 0x1E02, 0x1E03, 0x00A3, 0x010A, 0x010B, 0x1E0A, 0x00A7, 
             0x1E80, 0x00A9, 0x1E82, 0x1E0B, 0x1EF2, 0x00AD, 0x00AE, 0x0178, 
             0x1E1E, 0x1E1F, 0x0120, 0x0121, 0x1E40, 0x1E41, 0x00B6, 0x1E56, 
             0x1E81, 0x1E57, 0x1E83, 0x1E60, 0x1EF3, 0x1E84, 0x1E85, 0x1E61, 
             0x00C0, 0x00C1, 0x00C2, 0x00C3, 0x00C4, 0x00C5, 0x00C6, 0x00C7, 
             0x00C8, 0x00C9, 0x00CA, 0x00CB, 0x00CC, 0x00CD, 0x00CE, 0x00CF, 
             0x0174, 0x00D1, 0x00D2, 0x00D3, 0x00D4, 0x00D5, 0x00D6, 0x1E6A, 
             0x00D8, 0x00D9, 0x00DA, 0x00DB, 0x00DC, 0x00DD, 0x0176, 0x00DF, 
             0x00E0, 0x00E1, 0x00E2, 0x00E3, 0x00E4, 0x00E5, 0x00E6, 0x00E7, 
             0x00E8, 0x00E9, 0x00EA, 0x00EB, 0x00EC, 0x00ED, 0x00EE, 0x00EF, 
             0x0175, 0x00F1, 0x00F2, 0x00F3, 0x00F4, 0x00F5, 0x00F6, 0x1E6B, 
             0x00F8, 0x00F9, 0x00FA, 0x00FB, 0x00FC, 0x00FD, 0x0177, 0x00FF)))
graphdata.chcpdocs['58163'] = 'ecma-35'
graphdata.defgsets['58163'] = ('ir006', 'ir199', 'nil', 'nil')

# ISO-8859-15 Latin-9 Latin-0 New Western European RHS
graphdata.gsets["ir203"] = (96, 1, tuple((i,) for i in (
             0x00A0, 0x00A1, 0x00A2, 0x00A3, 0x20AC, 0x00A5, 0x0160, 0x00A7, 
             0x0161, 0x00A9, 0x00AA, 0x00AB, 0x00AC, 0x00AD, 0x00AE, 0x00AF, 
             0x00B0, 0x00B1, 0x00B2, 0x00B3, 0x017D, 0x00B5, 0x00B6, 0x00B7, 
             0x017E, 0x00B9, 0x00BA, 0x00BB, 0x0152, 0x0153, 0x0178, 0x00BF, 
             0x00C0, 0x00C1, 0x00C2, 0x00C3, 0x00C4, 0x00C5, 0x00C6, 0x00C7, 
             0x00C8, 0x00C9, 0x00CA, 0x00CB, 0x00CC, 0x00CD, 0x00CE, 0x00CF, 
             0x00D0, 0x00D1, 0x00D2, 0x00D3, 0x00D4, 0x00D5, 0x00D6, 0x00D7, 
             0x00D8, 0x00D9, 0x00DA, 0x00DB, 0x00DC, 0x00DD, 0x00DE, 0x00DF, 
             0x00E0, 0x00E1, 0x00E2, 0x00E3, 0x00E4, 0x00E5, 0x00E6, 0x00E7, 
             0x00E8, 0x00E9, 0x00EA, 0x00EB, 0x00EC, 0x00ED, 0x00EE, 0x00EF, 
             0x00F0, 0x00F1, 0x00F2, 0x00F3, 0x00F4, 0x00F5, 0x00F6, 0x00F7, 
             0x00F8, 0x00F9, 0x00FA, 0x00FB, 0x00FC, 0x00FD, 0x00FE, 0x00FF)))
graphdata.chcpdocs['923'] = 'ecma-35'
graphdata.defgsets['923'] = ('ir006', 'ir203', 'nil', 'nil')

# Euro update of ECMA-94:L1 ISO-8859-1 Latin-1 Western European RHS
graphdata.gsets["ir204"] = (96, 1, tuple((i,) for i in (
             0x00A0, 0x00A1, 0x00A2, 0x00A3, 0x20AC, 0x00A5, 0x00A6, 0x00A7, 
             )) + tuple((i,) for i in range(0xA8, 0x100)))
graphdata.chcpdocs['61235'] = 'ecma-35'
graphdata.defgsets['61235'] = ('ir006', 'ir204', 'nil', 'nil')
# Euro update of ECMA-94:L4 ISO-8859-4 Latin-4 North European RHS
graphdata.gsets["ir205"] = (96, 1, tuple((i,) for i in (
             0x00A0, 0x0104, 0x0138, 0x0156, 0x20AC, 0x0128, 0x013B, 0x00A7, 
             0x00A8, 0x0160, 0x0112, 0x0122, 0x0166, 0x00AD, 0x017D, 0x00AF, 
             0x00B0, 0x0105, 0x02DB, 0x0157, 0x00B4, 0x0129, 0x013C, 0x02C7, 
             0x00B8, 0x0161, 0x0113, 0x0123, 0x0167, 0x014A, 0x017E, 0x014B, 
             0x0100, 0x00C1, 0x00C2, 0x00C3, 0x00C4, 0x00C5, 0x00C6, 0x012E, 
             0x010C, 0x00C9, 0x0118, 0x00CB, 0x0116, 0x00CD, 0x00CE, 0x012A, 
             0x0110, 0x0145, 0x014C, 0x0136, 0x00D4, 0x00D5, 0x00D6, 0x00D7, 
             0x00D8, 0x0172, 0x00DA, 0x00DB, 0x00DC, 0x0168, 0x016A, 0x00DF, 
             0x0101, 0x00E1, 0x00E2, 0x00E3, 0x00E4, 0x00E5, 0x00E6, 0x012F, 
             0x010D, 0x00E9, 0x0119, 0x00EB, 0x0117, 0x00ED, 0x00EE, 0x012B, 
             0x0111, 0x0146, 0x014D, 0x0137, 0x00F4, 0x00F5, 0x00F6, 0x00F7, 
             0x00F8, 0x0173, 0x00FA, 0x00FB, 0x00FC, 0x0169, 0x016B, 0x02D9)))
graphdata.chcpdocs['58258'] = 'ecma-35'
graphdata.defgsets['58258'] = ('ir006', 'ir205', 'nil', 'nil')
# Euro update of ISO-8859-13 Latin-7 Baltic Rim RHS
graphdata.gsets["ir206"] = (96, 1, tuple((i,) for i in (
             0x00A0, 0x201D, 0x00A2, 0x00A3, 0x20AC, 0x201E, 0x00A6, 0x00A7, 
             0x00D8, 0x00A9, 0x0156, 0x00AB, 0x00AC, 0x00AD, 0x00AE, 0x00C6, 
             0x00B0, 0x00B1, 0x00B2, 0x00B3, 0x201C, 0x00B5, 0x00B6, 0x00B7, 
             0x00F8, 0x00B9, 0x0157, 0x00BB, 0x00BC, 0x00BD, 0x00BE, 0x00E6, 
             0x0104, 0x012E, 0x0100, 0x0106, 0x00C4, 0x00C5, 0x0118, 0x0112, 
             0x010C, 0x00C9, 0x0179, 0x0116, 0x0122, 0x0136, 0x012A, 0x013B, 
             0x0160, 0x0143, 0x0145, 0x00D3, 0x014C, 0x00D5, 0x00D6, 0x00D7, 
             0x0172, 0x0141, 0x015A, 0x016A, 0x00DC, 0x017B, 0x017D, 0x00DF, 
             0x0105, 0x012F, 0x0101, 0x0107, 0x00E4, 0x00E5, 0x0119, 0x0113, 
             0x010D, 0x00E9, 0x017A, 0x0117, 0x0123, 0x0137, 0x012B, 0x013C, 
             0x0161, 0x0144, 0x0146, 0x00F3, 0x014D, 0x00F5, 0x00F6, 0x00F7, 
             0x0173, 0x0142, 0x015B, 0x016B, 0x00FC, 0x017C, 0x017E, 0x2019)))
graphdata.chcpdocs['901'] = 'ecma-35'
graphdata.defgsets['901'] = ('ir006', 'ir206', 'nil', 'nil')

# ISO 8859 Adaptation for Saami and Romani (RHS)
graphdata.gsets["ir209"] = (96, 1, (
    (0xA0,), (0x010C,), (0x010D,), (0x0110,), (0x0111,), (0x01E4,), (0x01E5,), (0xA7,),
    (0x01E6,), (0xA9,), (0x01E7,), (0x021E,), (0x01E8,), (0xAD,), (0x01E9,), (0x014A,),
    (0xB0,), (0x014B,), (0x0160,), (0x0161,), (0xB4,), (0x0166,), (0xB6,), (0xB7,),
    (0x0167,), (0x017D,), (0x017E,), (0x021F,), (0x01B7,), (0x0292,), (0x01EE,), (0x01EF,),
    (0xC0,), (0xC1,), (0xC2,), (0xC3,), (0xC4,), (0xC5,), (0xC6,), (0xC7,),
    (0xC8,), (0xC9,), (0xCA,), (0xCB,), (0xCC,), (0xCD,), (0xCE,), (0xCF,),
    (0xD0,), (0xD1,), (0xD2,), (0xD3,), (0xD4,), (0xD5,), (0xD6,), (0xD7,),
    (0xD8,), (0xD9,), (0xDA,), (0xDB,), (0xDC,), (0xDD,), (0xDE,), (0xDF,),
    (0xE0,), (0xE1,), (0xE2,), (0xE3,), (0xE4,), (0xE5,), (0xE6,), (0xE7,),
    (0xE8,), (0xE9,), (0xEA,), (0xEB,), (0xEC,), (0xED,), (0xEE,), (0xEF,),
    (0xF0,), (0xF1,), (0xF2,), (0xF3,), (0xF4,), (0xF5,), (0xF6,), (0xF7,),
    (0xF8,), (0xF9,), (0xFA,), (0xFB,), (0xFC,), (0xFD,), (0xFE,), (0xFF,),
))
graphdata.chcpdocs['60211'] = 'ecma-35'
graphdata.defgsets['60211'] = ('ir006', 'ir209', 'nil', 'nil')

# SR-14111 ISO-8859-16 Latin-10 South-Eastern European RHS
graphdata.gsets["ir226"] = (96, 1, tuple((i,) for i in (
             0x00A0, 0x0104, 0x0105, 0x0141, 0x20AC, 0x201E, 0x0160, 0x00A7, 
             0x0161, 0x00A9, 0x0218, 0x00AB, 0x0179, 0x00AD, 0x017A, 0x017B, 
             0x00B0, 0x00B1, 0x010C, 0x0142, 0x017D, 0x201D, 0x00B6, 0x00B7, 
             0x017E, 0x010D, 0x0219, 0x00BB, 0x0152, 0x0153, 0x0178, 0x017C, 
             0x00C0, 0x00C1, 0x00C2, 0x0102, 0x00C4, 0x0106, 0x00C6, 0x00C7, 
             0x00C8, 0x00C9, 0x00CA, 0x00CB, 0x00CC, 0x00CD, 0x00CE, 0x00CF, 
             0x0110, 0x0143, 0x00D2, 0x00D3, 0x00D4, 0x0150, 0x00D6, 0x015A, 
             0x0170, 0x00D9, 0x00DA, 0x00DB, 0x00DC, 0x0118, 0x021A, 0x00DF, 
             0x00E0, 0x00E1, 0x00E2, 0x0103, 0x00E4, 0x0107, 0x00E6, 0x00E7, 
             0x00E8, 0x00E9, 0x00EA, 0x00EB, 0x00EC, 0x00ED, 0x00EE, 0x00EF, 
             0x0111, 0x0144, 0x00F2, 0x00F3, 0x00F4, 0x0151, 0x00F6, 0x015B, 
             0x0171, 0x00F9, 0x00FA, 0x00FB, 0x00FC, 0x0119, 0x021B, 0x00FF)))

graphdata.chcpdocs['65500'] = 'ecma-35'
graphdata.defgsets['65500'] = ('ir006', 'ir226', 'nil', 'nil')

# TDS 565 7-bit Turkmen
graphdata.gsets["ir230"] = (94, 1, ((0x21,), (0x22,), (0x23,), (0x24,), (0x25,), (0x26,), (0x27,), (0x28,), (0x29,), (0x2A,), (0x2B,), (0x2C,), (0x2D,), (0x2E,), (0x2F,), (0x30,), (0x31,), (0x32,), (0x33,), (0x34,), (0x35,), (0x36,), (0x37,), (0x38,), (0x39,), (0x3A,), (0x3B,), (0x3C,), (0x3D,), (0x3E,), (0x3F,), (0x40,), (0x41,), (0x42,), (0xC7,), (0x44,), (0x45,), (0xC4,), (0x46,), (0x47,), (0x48,), (0x49,), (0x4A,), (0x017D,), (0x4B,), (0x4C,), (0x4D,), (0x4E,), (0x0147,), (0x4F,), (0xD6,), (0x50,), (0x52,), (0x53,), (0x015E,), (0x54,), (0x55,), (0xDC,), (0x57,), (0x59,), (0xDD,), (0x5A,), (0x5F,), (0x2116,), (0x61,), (0x62,), (0xE7,), (0x64,), (0x65,), (0xE4,), (0x66,), (0x67,), (0x68,), (0x69,), (0x6A,), (0x017E,), (0x6B,), (0x6C,), (0x6D,), (0x6E,), (0x0148,), (0x6F,), (0xF6,), (0x70,), (0x72,), (0x73,), (0x015F,), (0x74,), (0x75,), (0xFC,), (0x77,), (0x79,), (0xFD,), (0x7A,)))

# ANSEL (ANSI/NISO Z39.47), vanilla (without an eszett)
graphdata.gsets["ir231"] = (94, 1, (
                         (0x0141,),  (0x00D8,),  (0x0110,), 
             (0x00DE,),  (0x00C6,),  (0x0152,),  (0x02B9,),
             (0x00B7,),  (0x266D,),  (0x00AE,),  (0x00B1,), 
             (0x01A0,),  (0x01AF,),  (0x02BC,),  None, 
             (0x02BB,),  (0x0142,),  (0x00F8,),  (0x0111,), 
             (0x00FE,),  (0x00E6,),  (0x0153,),  (0x02BA,), 
             (0x0131,),  (0x00A3,),  (0x00F0,),  None,      
             (0x01A1,),  (0x01B0,),  None,       None, 
             (0x00B0,),  (0x2113,),  (0x2117,),  (0x00A9,), 
             (0x266F,),  (0x00BF,),  (0x00A1,),  None,
             None,       None,       None,       None, 
             None,       None,       None,       None,  
             None,       None,       None,       None,      
             None,       None,       None,       None, 
             None,       None,       None,       None,      
             None,       None,       None,       None, 
             (-0x0309,), (-0x0300,), (-0x0301,), (-0x0302,), 
             (-0x0303,), (-0x0304,), (-0x0306,), (-0x0307,), 
             (-0x0308,), (-0x030C,), (-0x030A,), (-0xFE20,), 
             (-0xFE21,), (-0x0315,), (-0x030B,), (-0x0310,), 
             (-0x0327,), (-0x0328,), (-0x0323,), (-0x0324,), 
             (-0x0325,), (-0x0333,), (-0x0332,), (-0x0326,), 
             (-0x031C,), (-0x032E,), (-0xFE22,), (-0xFE23,), 
             None,       None,       (-0x0313,) ))

# ANSEL (ANSI/NISO Z39.47), with Library of Congress additions.
# LoC still use the same escape sequence as assigned for the standard one though.
graphdata.gsets["ir231/marc"] = (94, 1, (
                         (0x0141,),  (0x00D8,),  (0x0110,), 
             (0x00DE,),  (0x00C6,),  (0x0152,),  (0x02B9,),
             (0x00B7,),  (0x266D,),  (0x00AE,),  (0x00B1,), 
             (0x01A0,),  (0x01AF,),  (0x02BC,),  None, 
             (0x02BB,),  (0x0142,),  (0x00F8,),  (0x0111,), 
             (0x00FE,),  (0x00E6,),  (0x0153,),  (0x02BA,), 
             (0x0131,),  (0x00A3,),  (0x00F0,),  None,      
             (0x01A1,),  (0x01B0,),  None,       None, 
             (0x00B0,),  (0x2113,),  (0x2117,),  (0x00A9,), 
             (0x266F,),  (0x00BF,),  (0x00A1,),  (0x00DF,), 
             (0x20AC,),  None,       None,       None, 
             None,       None,       None,       None,  
             None,       None,       None,       None,      
             None,       None,       None,       None, 
             None,       None,       None,       None,      
             None,       None,       None,       None, 
             (-0x0309,), (-0x0300,), (-0x0301,), (-0x0302,), 
             (-0x0303,), (-0x0304,), (-0x0306,), (-0x0307,), 
             (-0x0308,), (-0x030C,), (-0x030A,), (-0xFE20,), 
             (-0xFE21,), (-0x0315,), (-0x030B,), (-0x0310,), 
             (-0x0327,), (-0x0328,), (-0x0323,), (-0x0324,), 
             (-0x0325,), (-0x0333,), (-0x0332,), (-0x0326,), 
             (-0x031C,), (-0x032E,), (-0xFE22,), (-0xFE23,), 
             None,       None,       (-0x0313,) ))

# ANSEL (ANSI/NISO Z39.47), with Library of Congress and Genealogical Society of Utah additions.
# The extensions do not collide and mostly co-exist, besides both adding the eszett (a conspicuous
#   omission from the original ANSEL if I ever saw one). GSU's midline letters are not only mapped
#   to their ASCII equivalents on Wikipedia, but also by GSU's now-discontinued PAF (arguably the
#   only source of true wisdom in this respect). No idea what they were originally for. Mapping
#   straight to their ASCII equivalents seems foolish here though, hence the zenkaku mappings.
graphdata.gsets["ir231/full"] = (94, 1, (
                         (0x0141,),  (0x00D8,),  (0x0110,), 
             (0x00DE,),  (0x00C6,),  (0x0152,),  (0x02B9,),
             (0x00B7,),  (0x266D,),  (0x00AE,),  (0x00B1,), 
             (0x01A0,),  (0x01AF,),  (0x02BC,),  None, 
             (0x02BB,),  (0x0142,),  (0x00F8,),  (0x0111,), 
             (0x00FE,),  (0x00E6,),  (0x0153,),  (0x02BA,), 
             (0x0131,),  (0x00A3,),  (0x00F0,),  None,      
             (0x01A1,),  (0x01B0,),  (0x25A1,),  (0x25A0,), 
             (0x00B0,),  (0x2113,),  (0x2117,),  (0x00A9,), 
             (0x266F,),  (0x00BF,),  (0x00A1,),  (0x00DF,), 
             (0x20AC,),  None,       None,       None, 
             None,       (0xFF45,),  (0xFF4F,),  (0x00DF,), 
             None,       None,       None,       None,      
             None,       None,       None,       None, 
             None,       None,       None,       None,      
             None,       None,       None,       None, 
             (-0x0309,), (-0x0300,), (-0x0301,), (-0x0302,), 
             (-0x0303,), (-0x0304,), (-0x0306,), (-0x0307,), 
             (-0x0308,), (-0x030C,), (-0x030A,), (-0xFE20,), 
             (-0xFE21,), (-0x0315,), (-0x030B,), (-0x0310,), 
             (-0x0327,), (-0x0328,), (-0x0323,), (-0x0324,), 
             (-0x0325,), (-0x0333,), (-0x0332,), (-0x0326,), 
             (-0x031C,), (-0x032E,), (-0xFE22,), (-0xFE23,), 
             (-0x0338,), None,       (-0x0313,) ))

# TDS 616:2003 RHS for 8-bit Turkmen (duplicates ASCII in several places so presumably for a non-ASCII LHS?)
graphdata.gsets["ir232"] = (94, 1, (None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (0x41,), (0x42,), (0xC7,), (0x44,), (0x45,), (0xC4,), (0x46,), (0x47,), (0x48,), (0x49,), (0x4A,), (0x017D,), (0x4B,), (0x4C,), (0x4D,), (0x4E,), (0x0147,), (0x4F,), (0xD6,), (0x50,), (0x52,), (0x53,), (0x015E,), (0x54,), (0x55,), (0xDC,), (0x57,), (0x59,), (0xDD,), (0x5A,), None, (0x2116,), (0x61,), (0x62,), (0xE7,), (0x64,), (0x65,), (0xE4,), (0x66,), (0x67,), (0x68,), (0x69,), (0x6A,), (0x017E,), (0x6B,), (0x6C,), (0x6D,), (0x6E,), (0x0148,), (0x6F,), (0xF6,), (0x70,), (0x72,), (0x73,), (0x015F,), (0x74,), (0x75,), (0xFC,), (0x77,), (0x79,), (0xFD,), (0x7A,), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None))

# Brazilian ABICOMP (Associação Brasileira de Indústria de Computadores)
graphdata.gsets["abicomp"] = (96, 1, ((160,), (192,), (193,), (194,), (195,), (196,), (199,), (200,), (201,), (202,), (203,), (204,), (205,), (206,), (938,), (209,), (210,), (211,), (212,), (213,), (214,), (338,), (217,), (218,), (219,), (220,), (221,), (168,), (163,), (180,), (167,), (176,), (161,), (224,), (225,), (226,), (227,), (228,), (231,), (232,), (233,), (234,), (235,), (236,), (237,), (238,), (239,), (241,), (242,), (243,), (244,), (245,), (246,), (339,), (249,), (250,), (251,), (252,), (253,), (223,), (170,), (186,), (191,), (177,), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None))
graphdata.chcpdocs['3848'] = 'ecma-35'
graphdata.defgsets['3848'] = ('ir006', 'abicomp', 'nil', 'nil')
graphdata.gsets["abicomp/94"] = (94, 1, graphdata.gsets["abicomp"][2][1:-1])

# "HP Roman" supplementary set; IBM's code page 1050 (on its own) or 1051 (as a complete 8-bit encoding)
graphdata.gsets["hproman"] = (94, 1, ((192,), (194,), (200,), (202,), (203,), (206,), (207,), (180,), (715,), (710,), (168,), (732,), (217,), (219,), (8356,), (8254,), (221,), (253,), (730,), (199,), (231,), (209,), (241,), (161,), (191,), (164,), (163,), (165,), (167,), (402,), (162,), (226,), (234,), (244,), (251,), (225,), (233,), (243,), (250,), (224,), (232,), (242,), (249,), (228,), (235,), (246,), (252,), (197,), (238,), (216,), (198,), (229,), (237,), (248,), (230,), (196,), (236,), (214,), (220,), (201,), (239,), (223,), (212,), (193,), (195,), (227,), (208,), (240,), (205,), (204,), (211,), (210,), (213,), (245,), (352,), (353,), (218,), (376,), (255,), (222,), (254,), (183,), (956,), (182,), (190,), (45,), (188,), (189,), (170,), (186,), (171,), (9632,), (187,), (177,)))
graphdata.chcpdocs['1050'] = graphdata.chcpdocs['1051'] = 'ecma-35'
graphdata.defgsets['1050'] = ('hproman', 'nil', 'nil', 'nil')
graphdata.defgsets['1051'] = ('ir006', 'hproman', 'nil', 'nil')

# SPAtlantis charset for romanisations of Middle Eastern languages
graphdata.gsets["spatlantis"] = (94, 1, (
               (0x0304,), (0x0304,), (0x0306,), (0x0306,), (0x0301,), (0x0301,), (0x0300,),
    (0x02BF,), (0x02BE,), (0x0300,), (0x0302,), (0x0302,), (0x0307,), (0x0307,), (0x030C,),
    (0x030C,), (0x0303,), (0x0303,), (0x0304,), (0x0304,), (0x0306,), (0x0306,), (0x00A0,),
    (0x0301,), (0x0323,), (0x0300,), (0x0331,), (0x0302,), (0x0302,), (0x0307,), (0x0307,),
    (0x0323,), (0x0041,), (0x0042,), (0x0043,), (0x0044,), (0x0045,), (0x0046,), (0x0047,),
    (0x0048,), (0x0049,), (0x004A,), (0x004B,), (0x004C,), (0x004D,), (0x004E,), (0x004F,),
    (0x0050,), (0x0051,), (0x0052,), (0x0053,), (0x0054,), (0x0055,), (0x0056,), (0x0057,),
    (0x0058,), (0x0059,), (0x005A,), (0x0323,), (0x030C,), (0x030C,), (0x0303,), (0x0303,),
    (0x0331,), (0x0061,), (0x0062,), (0x0063,), (0x0064,), (0x0065,), (0x0066,), (0x0067,),
    (0x0068,), (0x0069,), (0x006A,), (0x006B,), (0x006C,), (0x006D,), (0x006E,), (0x006F,),
    (0x0070,), (0x0071,), (0x0072,), (0x0073,), (0x0074,), (0x0075,), (0x0076,), (0x0077,),
    (0x0078,), (0x0079,), (0x007A,), (0x0331,), (0x0131,), (0x032E,), (0x032E,)))

# Windows code pages for non-Vietnamese Latin
graphdata.rhses["1250"] = parsers.read_single_byte("WHATWG/index-windows-1250.txt") # Central European
graphdata.rhses["1252"] = graphdata.rhses["1004"] = graphdata.rhses["5348"] = parsers.read_single_byte(
    "WHATWG/index-windows-1252.txt") # ISO-8859-1 ext.
graphdata.defgsets["1252"] = graphdata.defgsets["1004"] = graphdata.defgsets["5348"] = ("ir006", "ir100", "nil", "nil")
graphdata.rhses["1254"] = parsers.read_single_byte("WHATWG/index-windows-1254.txt") # ISO-8859-9 ext.
graphdata.defgsets["1254"] = ("ir006", "ir148", "nil", "nil")
graphdata.rhses["58598"] = graphdata.rhses["1254"][:32] + graphdata.gsets["ir148/azeri"][2]
graphdata.defgsets["58598"] = ("ir006", "ir148/azeri", "nil", "nil")
graphdata.rhses["1257"] = graphdata.rhses["5353"
    ] = parsers.read_single_byte("WHATWG/index-windows-1257.txt") # Baltic Rim
graphdata.defgsets["1257"] = graphdata.defgsets["5353"] = ("ir006", "ir179", "nil", "nil")
graphdata.rhses["59620"
    ] = parsers.read_single_byte("Other/T1059620.ucm") # CeltScript Latin-8 (FreeDOS variant)

# Windows-1252 variant with card suits in positions reportedly supported by PalmOS (extension of an
#   old Windows-1252 version, thus place where uppercase Ž was later added occupied by a card suit)
graphdata.rhses["101252"] = graphdata.rhses["1252"][:13] + ((0x2666,), (0x2663,), (0x2665,), (0x2660,)) + graphdata.rhses["1252"][17:]
graphdata.defgsets["101252"] = ("ir006", "ir100", "nil", "nil")

# OEM code pages
graphdata.rhses["112"] = parsers.read_single_byte("Other/T1000112.ucm") # Turkish and Maltese
graphdata.rhses["113"] = parsers.read_single_byte("Other/T1000113.ucm") # Gajica
graphdata.rhses["220"] = parsers.read_single_byte("Other/T1000220.ucm") # Spanish
graphdata.rhses["437"] = parsers.read_single_byte("ICU/ibm-437_P100-1995.ucm") # United States
graphdata.defgsets["437"] = ("ir006", "pclinedrawing", "nil", "nil") # Note: gets used as the default.
graphdata.rhses["667"] = parsers.read_single_byte("Other/T1000667.ucm") # Polish (Mazovia)
graphdata.rhses["668"] = parsers.read_single_byte("Other/T1000668.ucm") # Polish
graphdata.rhses["770"] = parsers.read_single_byte("Other/T1000770.ucm") # Baltic
graphdata.rhses["773"] = parsers.read_single_byte("Other/T1000773.ucm") # Baltic (KBL)
graphdata.rhses["775"] = parsers.read_single_byte("ICU/ibm-775_P100-1996.ucm") # Baltic
graphdata.rhses["777"] = parsers.read_single_byte("Other/T1000777.ucm") # Accented Lithuanian (KBL)
graphdata.rhses["778"] = parsers.read_single_byte("Other/T1000778.ucm") # Lithuanian (LST 1590-2)
graphdata.rhses["790"] = parsers.read_single_byte("Other/T1000790.ucm") # Polish (Mazovia)
graphdata.rhses["850"] = parsers.read_single_byte("ICU/ibm-850_P100-1995.ucm") # Western European
graphdata.rhses["1108"] = graphdata.rhses["850"][:-1] + (None,)
graphdata.rhses["852"] = parsers.read_single_byte("ICU/ibm-852_P100-1995.ucm") # Central European
graphdata.rhses["853"] = parsers.read_single_byte("Other/T1000853.ucm") # Turkish, Esperanto, Maltese
graphdata.rhses["857"] = parsers.read_single_byte("ICU/ibm-857_P100-1995.ucm") # Turkish
graphdata.rhses["858"] = parsers.read_single_byte("ICU/ibm-858_P100-1997.ucm") # Euro Sign
graphdata.rhses["859"] = parsers.read_single_byte("ICU/ibm-859_P100-1999.ucm") # New Western European
graphdata.rhses["860"] = parsers.read_single_byte("ICU/ibm-860_P100-1995.ucm") # Portuguese
graphdata.rhses["861"] = parsers.read_single_byte("ICU/ibm-861_P100-1995.ucm") # Icelandic
graphdata.rhses["863"] = parsers.read_single_byte("ICU/ibm-863_P100-1995.ucm") # Quebecois French
graphdata.rhses["865"] = parsers.read_single_byte("ICU/ibm-865_P100-1995.ucm") # Nordic
graphdata.rhses["877"] = parsers.read_single_byte("Other/T1000877.ucm") # Optical Character Recognition
graphdata.rhses["898"] = parsers.read_single_byte("Other/T1000898.ucm") # IBM Word Processing
graphdata.rhses["903"] = (None,) * 128
graphdata.defgsets["903"] = ("ir014", "nil", "nil", "nil")
graphdata.rhses["904"] = (None,) * 128
graphdata.defgsets["904"] = ("ir006", "nil", "nil", "nil")
graphdata.rhses["906"] = parsers.read_single_byte("Other/T1000906.ucm") # IBM 3812 and IBM 3820
graphdata.defgsets["906"] = ("alt646/ibm-minus3", "pclinedrawing", "nil", "nil")
graphdata.rhses["991"] = parsers.read_single_byte("Other/T1000991.ucm") # Polish (Mazovia)
graphdata.rhses["1116"] = parsers.read_single_byte("Other/T1001116.ucm") # Estonian
graphdata.rhses["1117"] = parsers.read_single_byte("Other/T1001117.ucm") # Latvian
graphdata.rhses["1118"] = parsers.read_single_byte("Other/T1001118.ucm") # Baltic (LST 1283)
graphdata.rhses["3844"] = parsers.read_single_byte("Other/T1003844.ucm") # Czech
graphdata.rhses["3845"] = parsers.read_single_byte("Other/T1003845.ucm") # Hungarian
graphdata.rhses["3846"] = parsers.read_single_byte("Other/T1003846.ucm") # Turkish (Star Micronics)
graphdata.rhses["57781"] = parsers.read_single_byte("Other/T1057781.ucm") # Hungarian with Forint sign
graphdata.rhses["58335"] = parsers.read_single_byte("Other/T1058335.ucm") # Kashubian

# Macintosh pages
graphdata.rhses["10000"] = graphdata.rhses["1275"
    ] = parsers.read_single_byte("WHATWG/index-macintosh.txt") # MacRoman
graphdata.rhses["10081"] = graphdata.rhses["1281"
    ] = parsers.read_mozilla_ut_file("Mozilla/macturki.ut") # MacTurkish
graphdata.rhses["10029"] = graphdata.rhses["1282"
    ] = parsers.read_mozilla_ut_file("Mozilla/macce.ut") # Macintosh Central European
graphdata.rhses["10082"] = graphdata.rhses["1284"
    ] = parsers.read_mozilla_ut_file("Mozilla/maccroat.ut") # MacCroatian
graphdata.rhses["10010"] = graphdata.rhses["1285"
    ] = parsers.read_mozilla_ut_file("Mozilla/macro.ut") # MacRomanian
graphdata.rhses["10079"] = graphdata.rhses["1286"
    ] = parsers.read_mozilla_ut_file("Mozilla/macicela.ut") # MacIcelandic
graphdata.rhses["58619"] = parsers.read_single_byte("Other/T1058619.ucm") # MacGaelic
graphdata.rhses["58630"] = parsers.read_single_byte("Other/T1058630.ucm") # MacSaami

# HP-compatibility code pages
graphdata.rhses["1053"] = ((None,) * 32) + tuple((i,) for i in range(0xA0, 0x100))
graphdata.defgsets["1053"] = ("ir006/ibm-hp-diacritics", "ir100", "nil", "nil")
graphdata.rhses["1057"] = parsers.read_single_byte("Other/T1001057.ucm")
graphdata.defgsets["1057"] = ("ir006/ibm-hp-alternatives", "pclinedrawing", "nil", "nil")
graphdata.rhses["1058"] = parsers.read_single_byte("Other/T1001058.ucm")
graphdata.defgsets["1058"] = ("ir006/ibm-hp-ascii-tilde", "pclinedrawing", "nil", "nil")

# LaTeX "EC" or "T1" (Cork) charset
graphdata.rhses["996110"] = _cork = (
  (0x0102,), (0x0104,), (0x0106,), (0x010C,), (0x010E,), (0x011A,), (0x0118,), (0x011E,),
  (0x0139,), (0x013D,), (0x0141,), (0x0143,), (0x0147,), (0x014A,), (0x0150,), (0x0154,),
  (0x0158,), (0x015A,), (0x0160,), (0x015E,), (0x0164,), (0x0162,), (0x0170,), (0x016E,),
  (0x0178,), (0x0179,), (0x017D,), (0x017B,), (0x0132,), (0x0130,), (0x0111,), (0x00A7,),
  (0x0103,), (0x0105,), (0x0107,), (0x010D,), (0x010F,), (0x011B,), (0x0119,), (0x011F,),
  (0x013A,), (0x013E,), (0x0142,), (0x0144,), (0x0148,), (0x014B,), (0x0151,), (0x0155,),
  (0x0159,), (0x015B,), (0x0161,), (0x015F,), (0x0165,), (0x0163,), (0x0171,), (0x016F,),
  (0x00FF,), (0x017A,), (0x017E,), (0x017C,), (0x0133,), (0x00A1,), (0x00BF,), (0x00A3,),
  (0x00C0,), (0x00C1,), (0x00C2,), (0x00C3,), (0x00C4,), (0x00C5,), (0x00C6,), (0x00C7,),
  (0x00C8,), (0x00C9,), (0x00CA,), (0x00CB,), (0x00CC,), (0x00CD,), (0x00CE,), (0x00CF,),
  (0x00D0,), (0x00D1,), (0x00D2,), (0x00D3,), (0x00D4,), (0x00D5,), (0x00D6,), (0x0152,),
  (0x00D8,), (0x00D9,), (0x00DA,), (0x00DB,), (0x00DC,), (0x00DD,), (0x00DE,), (0x1E9E,),
  (0x00E0,), (0x00E1,), (0x00E2,), (0x00E3,), (0x00E4,), (0x00E5,), (0x00E6,), (0x00E7,),
  (0x00E8,), (0x00E9,), (0x00EA,), (0x00EB,), (0x00EC,), (0x00ED,), (0x00EE,), (0x00EF,),
  (0x00F0,), (0x00F1,), (0x00F2,), (0x00F3,), (0x00F4,), (0x00F5,), (0x00F6,), (0x0153,),
  (0x00F8,), (0x00F9,), (0x00FA,), (0x00FB,), (0x00FC,), (0x00FD,), (0x00FE,), (0x00DF,))
graphdata.defgsets["996110"] = ("ir006/smartquotes", "nil", "nil", "nil")

# LaTeX "DC" charset (older Cork variant, with Ŀ‍/ŀ instead of Ÿ/ÿ)
_dc = list(_cork)
_dc[24] = (0x013F,)
_dc[56] = (0x0140,)
graphdata.rhses["996111"] = tuple(_dc)
graphdata.defgsets["996111"] = ("ir006/smartquotes", "nil", "nil", "nil")

# LaTeX "Extended TeX" charset (Cork variant with ¶ instead of §)
_extex = list(_cork)
_extex[31] = (0x00B6,)
graphdata.rhses["996112"] = tuple(_extex)
graphdata.defgsets["996112"] = ("ir006/smartquotes", "nil", "nil", "nil")

# LaTeX "T3" (8-bit phonetic notation) charset
graphdata.gsets["tex-ipa-gl/94"] = (94, 1, (
             (0x01C3,), (0x02C8,), (0x031B,), (0x0322,), (0x0321,), (0x02DC,), (0x02BC,),
  (0x0028,), (0x0029,), (0x002A,), (0x002B,), (0x002C,), (0x002D,), (0x002E,), (0x002F,),
  (0x0289,), (0x0268,), (0x028C,), (0x025C,), (0x0265,), (0x0250,), (0x0252,), (0x0264,),
  (0x0275,), (0x0258,), (0x02D0,), (0x02D1,), (0x2323,), (0x003D,), (0x2322,), (0x003F,),
  (0x0259,), (0x0251,), (0x03B2,), (0x0255,), (0x00F0,), (0x025B,), (0x0278,), (0x0263,),
  (0x0266,), (0x026A,), (0x029D,), (0x0281,), (0x028E,), (0x0271,), (0x014B,), (0x0254,),
  (0x0294,), (0x0295,), (0x027E,), (0x0283,), (0x03B8,), (0x028A,), (0x028B,), (0x026F,),
  (0x03C7,), (0x028F,), (0x0292,), (0x005B,), (0x02BD,), (0x005D,), (0x02FA,), (0x02F9,),
  (0x02BB,), (0x0061,), (0x0062,), (0x0063,), (0x0064,), (0x0065,), (0x0066,), (0x0261,),
  (0x0068,), (0x0069,), (0x006A,), (0x006B,), (0x006C,), (0x006D,), (0x006E,), (0x006F,),
  (0x0070,), (0x0071,), (0x0072,), (0x0073,), (0x0074,), (0x0075,), (0x0076,), (0x0077,),
  (0x0078,), (0x0079,), (0x007A,), (0x01C1,), (0x01C0,), (0x01C2,), (0x02DE,)))
graphdata.gsets["tex-ipa-gl/96"] = (96, 1, ((0x02B9,), *graphdata.gsets["tex-ipa-gl/94"][2], (0x02CC,)))
graphdata.rhses["996130"] = (
  (0x02CD,), (0x02CE,), (0x2216,), (0x27CD,), (0x29F9,), (0x02CF,), (0x2215,), (0x27CB,),
  (0x29F8,), (0x02CD,), (0x02CE,), (0x2216,), (0x27CD,), (0x29F9,), (0x02CF,), (0x2215,),
  (0x27CB,), (0x29F8,), (0x007C,), (0x2016,), (0xA71C,), (0xA71B,), (0x2197,), (0x2198,),
  (0x1DC4,), (0x1DC5,), (0x1DC8,), (0x1DC9,), (0x030D,), (0x030E,), (0x02D9, 0x0300), (0x02D9, 0x0301),
  (0x0180,), (0x0111,), (0x0221,), (0x1D91,), (0x1D07,), (0xFF47,), (0x027F,), (0x0285,),
  (0x1D0A,), (0x029E,), (0x019A,), (0xA7DB,), (0x019B,), (0x026E,), (0x0235,), (0xAB62,),
  (0xA7B7,), (0xAB65,), (0x0286,), (0x01AB,), (0x0236,), (0x02A6,), (0x02AE,), (0x02AF,),
  (0x0293,), (0x01B9,), (0x044C,), (0x044A,), (0x02C0,), (0x02C2,), (0x02C3,), (0x007C,),
  (0x1D00,), (0x0188,), (0x0297,), (0x02A4,), (0x025A,), (0x029A,), (0x025E,), (0x025D,),
  (0x0264,), (0x029B,), (0x0267,), (0x029C,), (0x0269,), (0x025F,), (0x0199,), (0x029F,),
  (0x026E,), (0x0277,), (0x01A5,), (0x02A0,), (0x027C,), (0x027A,), (0x01AD,), (0x0276,),
  (0x0287,), (0x02A7,), (0x1D1C,), (0x0296,), (0x02A1,), (0x02A2,), (0x0225,), (0x00FE,),
  (0x0299,), (0x0253,), (0x0257,), (0x0256,), (0x0260,), (0x0262,), (0x00E6,), (0x00E7,),
  (0x0127,), (0x025F,), (0x0284,), (0x026B,), (0x026C,), (0x026D,), (0x0270,), (0x0273,),
  (0x0274,), (0x0272,), (0x0298,), (0x027D,), (0x0279,), (0x027B,), (0x0280,), (0x0153,),
  (0x00F8,), (0x0282,), (0x0288,), (0x028D,), (0x0290,), (0x0291,), (0x00FE,), (0x0195,))
graphdata.defgsets["996130"] = ("tex-ipa-gl/94", "nil", "nil", "nil")

# LaTeX "T4" (African Latin) charset
graphdata.rhses["996140"] = (
  (0x0181,), (0x018A,), (0x0190,),        (0x018E,), (0x0191,),        (0x011A,), (0x0194,), (0x0126,),
  (0x0198,), (0x019D,), (0x0186,),        (0x0143,), (0x01A9,),        (0x014A,), (0x01B2,), (0x01B3,),
  (0x0187,), (0x01A4,), (0x0160,),        (0x1E44,), (0x1E48,),        (0x1E62,), (0x01B7,), (0x0166,),
  (0x0116,), (0x1EB8,), (0x01AC,), (0x01AE,), (0x02A7,), (0x0066, 0x200D, 0x006A), (0x0111,), (0x02F5,),
  (0x0253,), (0x0257,), (0x025B,),        (0x0259,), (0x0192,),        (0x011B,), (0x0263,), (0x0127,),
  (0x0199,), (0x0272,), (0x0254,),        (0x0144,), (0x0283,),        (0x014B,), (0x028B,), (0x01B4,),
  (0x0188,), (0x01A5,), (0x0161,),        (0x1E45,), (0x1E49,),        (0x1E63,), (0x0292,), (0x0167,),
  (0x0117,), (0x1EB9,), (0x01AD,),        (0x0288,), (0x02EE,),        (0x00A1,), (0x00BF,), (0x02BC,),
  (0x0196,), (0x1ECA,), (0x0190, 0x0303), (0x00C3,), (0x1E3E,), (0x0186, 0x0303), (0x00C6,), (0x00C7,),
  (0x00C8,), (0x00C9,), (0x00CA,),        (0x00CB,), (0x0045, 0x0331), (0x0112,), (0x1EBC,), (0x0128,),
  (0x0189,), (0x00D1,), (0x00D2,),        (0x022E,), (0x00D4,),        (0x00D5,), (0x00D6,), (0x0152,),
  (0x00D8,), (0x1ECC,), (0x004F, 0x0331), (0x014C,), (0x01D1,),        (0x1EE4,), (0x0168,), (0x2E5D,),
  (0x0269,), (0x1ECB,), (0x025B, 0x0303), (0x00E3,), (0x1E3F,), (0x0254, 0x0303), (0x00E6,), (0x00E7,),
  (0x00E8,), (0x00E9,), (0x00EA,),        (0x00EB,), (0x0065, 0x0331), (0x0113,), (0x1EBD,), (0x0129,),
  (0x0256,), (0x00F1,), (0x00F2,),        (0x022F,), (0x00F4,),        (0x00F5,), (0x00F6,), (0x0153,),
  (0x00F8,), (0x1ECD,), (0x006F, 0x0331), (0x014D,), (0x01D2,),        (0x1EE5,), (0x0169,), (0x00DF))
graphdata.defgsets["996140"] = ("ir006/smartquotes", "nil", "nil", "nil")

# LaTeX "TS3" (supplementary phonetic notation) charset
graphdata.gsets["tex-supplementary-phonetic"] = (96, 1, (
    (0x1D8F,),  (0xAB64,), (0xA735,), (0xA72C,), (0x0297,),  (0x1DF0F,), (0x1DF0F,), (0x1DF25,),
    (0x1DF25,), (0x0238,), (0x1D92,), (0x1D93,),
        (0x03B3,), (0x03B3, 0x0321), (0x03B3, 0x0322), (0x0266, 0x0322),
    (0xA727,),  (0x2129,), (0x029D,), (0x0284,),
        (0x1DF11, 0x200D, 0x1DF27), (0x1DF27,), (0x019E,),  (0x2640,),
    (0x26B2,),  (0x0298,), (0x1D97,), (0x10DD,), (0x1D88,),  (0x0239,),  (0x01AA,),  (0x1DF2A,),
    (0x1DF0D,), (0x218A,), (0x01BA,), (0xA72B,), (0x1DF0E,), (0x00BF,),  (0x01C0,),  (0x01C1,),
    (0x01C2,),  (0x1DF11,), None,     None,      None,       None,       None,       None,
    (0x00FE,),  (0x00FE,), (0x00FE,), (0x00FE, 0x0321), (0x0294,),  (0x0294,),  (0x0294,),  None,
    None,       None,      None,      None,      None,       None,       None,       None,
    None,       None,      None,      None,      None,       None,       None,       None,
    None,       None,      None,      None,      None,       None,       None,       None,
    (0x2C6F,),  (0xA734,), (0x0394,), (0xA730,), (0x0138,),  (0x1DF10,), (0x2143,), (0x1D0D,),
    (0x1D18,),  (0xA7AF,), (0x1D19,), (0x2229,), None,       None,       None,      None))
graphdata.rhses["996230"] = (
    (0x00B8,),  (0x0322,), (0x0321,), (0x0321,), (0x2E0B,),  (0x20D6,),  (0x29FF,),  (0x2193,),
    (0x2191,),  (0x20EF,), (0x034D,), None,      None,       None,       None,       None,
    None,       None,      None,      None,      None,       None,       None,       None,
    None,       None,      None,      None,      None,       None,       None,       None,
    *graphdata.gsets["tex-supplementary-phonetic"][2])
graphdata.defgsets["996230"] = ("alt646/knuth", "tex-supplementary-phonetic", "nil", "nil")

# LaTeX "OT3" (7-bit phonetic notation) charset
graphdata.rhses["996730"] = (
  (0x0250,), (0x0251,), (0x03B1,), (0x0252,), (0x028C,), (0x0180,), (0x0062, 0x0335), (0x0062, 0x0338),
  (0x0253,), (0x03B2,), (0x023C,), (0x0255,), (0x0297,), (0x0111,), (0xA7C8,), (0x0064, 0x0338),
  (0x0257,), (0x0256,), (0x02A4,), (0x00F0,), (0x1D05,), (0x0259,), (0x025A,), (0x0258,),
  (0x025B,), (0x025C,), (0x025D,), (0x025E,), (0x0261,), (0x0260,), (0x0262,), (0x03B3,),
  (0x0263,), (0x0264,), (0x0195,), (0x0127,), (0x0266,), (0x0267,), (0x0265,), (0x0268,),
  (0x1D7B,), (0x0269,), (0x026A,), (0x1D7B,), (0x025F,), (0x026B,), (0x019A,), (0x026C,),
  (0x026D,), (0x026E,), (0xA7DB,), (0x019B,), (0x0271,), (0x026F,), (0x0270,), (0x0272,),
  (0x014B,), (0x0273,), (0x0274,), (0x0298,), (0x0275,), (0x0254,), (0xA7B7,), (0x0277,),
  (0xA74F,), (0x1D7D,), (0x00FE,), (0x0278,), (0x027E,), (0x027C,), (0x027D,), (0x0279,),
  (0x027B,), (0x027A,), (0x0280,), (0x0281,), (0x0282,), (0x0283,), (0x0286,), (0x03C3,),
  (0x0288,), (0x02A7,), (0x0287,), (0x03B8,), (0x0289,), (0xA7B9,), (0x028A,), (0x1D1C,),
  (0x1D7E,), (0x028B,), (0x028D,), (0x03C7,), (0x028E,), (0x028F,), (0x0291,), (0x0290,),
  (0x0292,), (0x0293,), (0x0294,), (0x0295,), (0x0296,), (0x0242,), (0xA7CF,), (0x032A,),
  (0x02C8,), (0x02CC,), (0x01C0,), (0x02FA,), (0x02D4,), (0x02D5,), (0xAB6A,), (0xAB6B,),
  (0x02D1,), (0x02D0,), (0x0324,), (0x0314,), (0x02C4,), (0x02C5,), (0x02C2,), (0x02C3,),
  (0x02DA,), (0x02F3,), (0x02D3,), (0x02DC,), (0x02F7,), (0x02EC,), (0x02DB,), (0x032F,))
graphdata.defgsets["996730"] = ("alt646/knuth", "nil", "nil", "nil")

# LaTeX Polish "OT4" charsets
graphdata.rhses["996740"] = ( # Standard subset of "OT4" charsets
  None,      (0x0104,), (0x0106,), None,      None,      None,      (0x0118,), None,
  None,      None,      (0x0141,), (0x0143,), None,      None,      None,      None,
  None,      (0x015A,), None,      None,      None,      None,      None,      None,
  None,      (0x0179,), None,      (0x017B,), None,      None,      None,      None,
  None,      (0x0105,), (0x0107,), None,      None,      None,      (0x0119,), None,
  None,      None,      (0x0142,), (0x0144,), None,      None,      (0x00AB,), (0x00BB,),
  None,      (0x015B,), None,      None,      None,      None,      None,      None,
  None,      (0x017A,), None,      (0x017C,), None,      None,      None,      None,
  None,      None,      None,      None,      None,      None,      None,      None,
  None,      None,      None,      None,      None,      None,      None,      None,
  None,      None,      None,      (0x00D3,), None,      None,      None,      None,
  None,      None,      None,      None,      None,      None,      None,      None,
  None,      None,      None,      None,      None,      None,      None,      None,
  None,      None,      None,      None,      None,      None,      None,      None,
  None,      None,      None,      (0x00F3,), None,      None,      None,      None,
  None,      None,      None,      None,      None,      None,      None,      None)
graphdata.defgsets["996740"] = ("alt646/knuth", "nil", "nil", "nil")
graphdata.rhses["996741"] = ( # "QX" variant of "OT4" charset
  (0x20AC,), (0x0104,), (0x0106,), (0x003E,), (0x2265,), (0x2248,), (0x0118,), (0x012E,),
  (0x003C,), (0x2264,), (0x0141,), (0x0143,), (0x007E,), (0x005E,), (0x2113,), (0x2020,),
  (0x2021,), (0x015A,), (0x0160,), (0x0218,), (0x00B0,), (0x021A,), (0x02DB,), (0x0172,),
  (0x0178,), (0x0179,), (0x017D,), (0x017B,), (0x0132,), (0x007B,), (0x007D,), (0x00A7,),
  None,      (0x0105,), (0x0107,), (0x00AE,), (0x00A9,), (0x00F7,), (0x0119,), (0x012F,),
  (0x2212,), (0x00D7,), (0x0142,), (0x0144,), (0x00B1,), (0x221E,), (0x00AB,), (0x00BB,),
  (0x00B6,), (0x015B,), (0x0161,), (0x0219,), (0x2022,), (0x021B,), (0x2015,), (0x0173,),
  (0x00FF,), (0x017A,), (0x017E,), (0x017C,), (0x0133,), (0x00B7,), (0x0022,), (0x0027,),
  (0x00C0,), (0x00C1,), (0x00C2,), (0x00C3,), (0x00C4,), (0x00C5,), (0x005C,), (0x00C7,),
  (0x00C8,), (0x00C9,), (0x00CA,), (0x00CB,), (0x00CC,), (0x00CD,), (0x00CE,), (0x00CF,),
  (0x00D0,), (0x00D1,), (0x00D2,), (0x00D3,), (0x00D4,), (0x00D5,), (0x00D6,), (0x00A4,),
  (0x2030,), (0x00D9,), (0x00DA,), (0x00DB,), (0x00DC,), (0x00DD,), (0x00DE,), (0x007C,),
  (0x00E0,), (0x00E1,), (0x00E2,), (0x00E3,), (0x00E4,), (0x00E5,), (0x005F,), (0x00E7,),
  (0x00E8,), (0x00E9,), (0x00EA,), (0x00EB,), (0x00EC,), (0x00ED,), (0x00EE,), (0x00EF,),
  (0x00F0,), (0x00F1,), (0x00F2,), (0x00F3,), (0x00F4,), (0x00F5,), (0x00F6,), (0x2222,),
  (0x2300,), (0x00F9,), (0x00FA,), (0x00FB,), (0x00FC,), (0x00FD,), (0x00FE,), (0x201E,))
graphdata.defgsets["996741"] = ("alt646/knuth", "nil", "nil", "nil")
graphdata.rhses["996742"] = ( # "RM" variant of "OT4" charset
  (0x0102,), (0x0104,), (0x0106,), (0x010C,), (0x010E,), (0x011A,), (0x0118,), (0x011E,),
  (0x0139,), (0x013D,), (0x0141,), (0x0143,), (0x0147,), (0x014A,), (0x0150,), (0x0154,),
  (0x0158,), (0x015A,), (0x0160,), (0x015E,), (0x0164,), (0x0162,), (0x0170,), (0x016E,),
  (0x0178,), (0x0179,), (0x017D,), (0x017B,), (0x0132,), (0x0130,), (0x0111,), (0x00A7,),
  (0x0103,), (0x0105,), (0x0107,), (0x010D,), (0x010F,), (0x011B,), (0x0119,), (0x011F,),
  (0x013A,), (0x013E,), (0x0142,), (0x0144,), (0x0148,), (0x014B,), (0x0151,), (0x0155,),
  (0x0159,), (0x015B,), (0x0161,), (0x015F,), (0x0165,), (0x0163,), (0x0171,), (0x016F,),
  (0x00FF,), (0x017A,), (0x017E,), (0x017C,), (0x0133,), (0x00B7,), (0x0022,), (0x00A3,),
  (0x00C0,), (0x00C1,), (0x00C2,), (0x00C3,), (0x00C4,), (0x00C5,), (0x00AB,), (0x00C7,),
  (0x00C8,), (0x00C9,), (0x00CA,), (0x00CB,), (0x00CC,), (0x00CD,), (0x00CE,), (0x00CF,),
  (0x00D0,), (0x00D1,), (0x00D2,), (0x00D3,), (0x00D4,), (0x00D5,), (0x00D6,), (0x00BB,),
  (0x2030,), (0x00D9,), (0x00DA,), (0x00DB,), (0x00DC,), (0x00DD,), (0x00DE,), (0x1E9E,),
  (0x00E0,), (0x00E1,), (0x00E2,), (0x00E3,), (0x00E4,), (0x00E5,), (0x005F,), (0x00E7,),
  (0x00E8,), (0x00E9,), (0x00EA,), (0x00EB,), (0x00EC,), (0x00ED,), (0x00EE,), (0x00EF,),
  (0x00F0,), (0x00F1,), (0x00F2,), (0x00F3,), (0x00F4,), (0x00F5,), (0x00F6,), (0x2222,),
  (0x2300,), (0x00F9,), (0x00FA,), (0x00FB,), (0x00FC,), (0x00FD,), (0x00FE,), (0x201E,))
graphdata.defgsets["996742"] = ("alt646/knuth", "nil", "nil", "nil")

# LaTeX Czech "XL2" charset (not quite an ISO-8859-2 extension)
graphdata.rhses["100912"] = (
  (0x2026,), (0x2020,), (0x2021,), (0x2022,), (0x00A3,), (0x00B6,), (0x20AC,), None,
  (0x2122,), (0x00A9,), (0x00AE,), None,      None,      (0x2030,), (0x2039,), (0x203A,),
  (0x03C0,), None,      None,      None,      None,      (0x017F,), (0x25CA,), (0x0192,),
  (0x00C0,), None,      (0x201A,), None,      (0x00AD,), (0x02DB,), (0x00AB,), (0x00BB,),
  (0x00A0,), (0x0104,), (0x02D8,), (0x0141,), (0x00A4,), (0x013D,), (0x015A,), (0x00A7,),
  (0x00A8,), (0x0160,), (0x0218,), (0x0164,), (0x0179,), (0x00AD,), (0x017D,), (0x017B,),
  (0x00B0,), (0x0105,), (0x00B8,), (0x0142,), (0x00B4,), (0x013E,), (0x015B,), (0x02C7,),
  (0x00E0,), (0x0161,), (0x0219,), (0x0165,), (0x017A,), (0x021B,), (0x017E,), (0x017C,),
  (0x0154,), (0x00C1,), (0x00C2,), (0x0102,), (0x00C4,), (0x0139,), (0x0106,), (0x00C7,),
  (0x010C,), (0x00C9,), (0x0118,), (0x00CB,), (0x011A,), (0x00CD,), (0x00CE,), (0x010E,),
  (0x00D0,), (0x0143,), (0x0147,), (0x00D3,), (0x00D4,), (0x0150,), (0x00D6,), (0x00D7,),
  (0x0158,), (0x016E,), (0x00DA,), (0x0170,), (0x00DC,), (0x00DD,), (0x021A,), (0x00DF,),
  (0x0155,), (0x00E1,), (0x00E2,), (0x0103,), (0x00E4,), (0x013A,), (0x0107,), (0x00E7,),
  (0x010D,), (0x00E9,), (0x0119,), (0x00EB,), (0x011B,), (0x00ED,), (0x00EE,), (0x010F,),
  (0x00F0,), (0x0144,), (0x0148,), (0x00F3,), (0x00F4,), (0x0151,), (0x00F6,), (0x00F7,),
  (0x0159,), (0x016F,), (0x00FA,), (0x0171,), (0x00FC,), (0x00FD,), (0x201E,), (0x201C,))
graphdata.defgsets["100912"] = ('alt646/knuth', 'ir101', 'nil', 'nil')

# LaTeX "Storm" charset
graphdata.rhses["999901"] = (
  None,      None,      None,      None,      None,      None,      None,      None,
  None,      None,      (0x0174,), (0x0176,), (0x0218,), (0x021A,), (0x016A,), (0x016C,),
  (0x00D0,), (0x00DE,), (0x0178,), (0x0156,), (0x015C,), (0x00DB,), (0x0172,), (0x0168,),
  (0x0145,), (0x01F4,), (0x011E,), (0x0134,), (0x0132,), (0x0130,), (0x013B,), (0x013F,),
  None,      None,      None,      None,      None,      None,      None,      None,
  None,      None,      (0x0175,), (0x0177,), (0x0219,), (0x021B,), (0x016B,), (0x016D,),
  (0x00F0,), (0x00FE,), (0x00FF,), (0x0157,), (0x015D,), (0x00FB,), (0x0173,), (0x0169,),
  (0x0146,), (0x01F5,), (0x011F,), (0x0135,), (0x0133,), None,      (0x013C,), (0x0140,),
  None,      (0x0116,), (0x0102,), (0x00C3,), (0x0100,), (0x00C5,), (0x0108,), (0x010A,),
  (0x00C8,), (0x0114,), (0x00CA,), (0x0112,), (0x00CC,), (0x0128,), (0x012A,), (0x00CF,),
  (0x012E,), (0x00D1,), (0x00D2,), (0x014C,), (0x014E,), (0x00D5,), (0x0145,), (0x0136,),
  (0x00D8,), (0x00D9,), (0x011C,), (0x0120,), (0x0122,), (0x015E,), (0x0124,), (0x0126,),
  None,      (0x0117,), (0x0103,), (0x00E3,), (0x0101,), (0x00E5,), (0x0109,), (0x010B,),
  (0x00E8,), (0x0115,), (0x00EA,), (0x0113,), (0x00EC,), (0x0129,), (0x012B,), (0x00EF,),
  (0x012F,), (0x00F1,), (0x00F2,), (0x014D,), (0x014F,), (0x00F5,), (0x0146,), (0x0137,),
  (0x00F8,), (0x00F9,), (0x011D,), (0x0121,), (0x0123,), (0x015F,), (0x0125,), (0x0127,))
graphdata.defgsets["999901"] = ('alt646/storm/extended', 'nil', 'nil', 'nil')

# LaTeX "dvips" charset
graphdata.rhses["999902"] = (
  (0x005E,), (0x007E,), (0x00C7,), (0x00CD,), (0x00CE,), (0x00E3,), (0x00EB,), (0x00E8,),
  (0x0161,), (0x017E,), (0x00D0,), (0xFB00,), (0xFB03,), (0xFB04,), None,      None,
  None,      None,      (0x0160,), None,      None,      None,      None,      None,
  (0x0178,), None,      (0x017D,), None,      None,      None,      None,      None,
  None,      None,      (0x00A2,), (0x00A3,), (0x2044,), (0x00A5,), (0x0192,), (0x00A7,),
  (0x00A4,), (0x00A9,), (0x201C,), (0x00AB,), (0x2039,), (0x203A,), (0xFB01,), (0xFB02,),
  (0x00B0,), (0x2013,), (0x2020,), (0x2021,), (0x00B7,), None,      (0x00B6,), (0x2022,),
  (0x201A,), (0x201E,), (0x201D,), (0x00BB,), (0x2026,), (0x2030,), None,      None,
  (0x00C0,), (0x00C1,), (0x00C2,), (0x00C3,), (0x00C4,), (0x00C5,), None,      (0x02D9,),
  (0x00C8,), (0x00C9,), (0x00CA,), (0x00CB,), (0x00CC,), (0x02DD,), (0x02DB,), (0x00CF,),
  (0x2014,), (0x00D1,), (0x00D2,), (0x00D3,), (0x00D4,), (0x00D5,), (0x00D6,), None,
  None,      (0x00D9,), (0x00DA,), (0x00DB,), (0x00DC,), (0x00DD,), (0x00DE,), None,
  (0x00E0,), (0x00E1,), (0x00E2,), (0x00AA,), (0x00E4,), (0x00E5,), None,      (0x00E7,),
  (0x0141,), (0x00E9,), (0x00EA,), (0x00BA,), (0x00EC,), (0x00ED,), (0x00EE,), (0x00EF,),
  None,      (0x00F1,), (0x00F2,), (0x00F3,), (0x00F4,), (0x00F5,), (0x00F6,), None,
  (0x0142,), (0x00F9,), (0x00FA,), (0x00FB,), (0x00FC,), (0x00FD,), (0x00FE,), (0x00FF,))
graphdata.defgsets["999902"] = ('ir006/smartquotes', 'nil', 'nil', 'nil')

# LaTeX "groff" charset
graphdata.rhses["300819"] = (
  (0x201A,), (0x00AB,), (0x00BB,), (0x2022,), (0x0192,), (0x2044,), (0x2030,), (0x2020,),
  (0x2021,), (0x2013,), (0x2014,), (0xFB00,), (0xFB01,), (0xFB02,), (0xFB03,), (0xFB04,),
  (0x0131,), (0x0237,), (0x0060,), (0x02DD,), (0x02D9,), (0x02D8,), (0x02C7,), (0x02DA,),
  (0x02DB,), (0x201C,), (0x201D,), (0x0153,), (0x0142,), (0x201E,), (0x0152,), (0x0141,),
  (0x00A0,), (0x00A1,), (0x00A2,), (0x00A3,), (0x00A4,), (0x00A5,), (0x00A6,), (0x00A7,),
  (0x00A8,), (0x00A9,), (0x00AA,), (0x2039,), (0x00AC,), (0x2212,), (0x00AE,), (0x00AF,),
  (0x00B0,), (0x00B1,), (0x00B2,), (0x00B3,), (0x00B4,), (0x00B5,), (0x00B6,), (0x00B7,),
  (0x00B8,), (0x00B9,), (0x00BA,), (0x203A,), (0x00BC,), (0x00BD,), (0x00BE,), (0x00BF,),
  (0x00C0,), (0x00C1,), (0x00C2,), (0x00C3,), (0x00C4,), (0x00C5,), (0x00C6,), (0x00C7,),
  (0x00C8,), (0x00C9,), (0x00CA,), (0x00CB,), (0x00CC,), (0x00CD,), (0x00CE,), (0x00CF,),
  (0x00D0,), (0x00D1,), (0x00D2,), (0x00D3,), (0x00D4,), (0x00D5,), (0x00D6,), (0x00D7,),
  (0x00D8,), (0x00D9,), (0x00DA,), (0x00DB,), (0x00DC,), (0x00DD,), (0x00DE,), (0x00DF,),
  (0x00E0,), (0x00E1,), (0x00E2,), (0x00E3,), (0x00E4,), (0x00E5,), (0x00E6,), (0x00E7,),
  (0x00E8,), (0x00E9,), (0x00EA,), (0x00EB,), (0x00EC,), (0x00ED,), (0x00EE,), (0x00EF,),
  (0x00F0,), (0x00F1,), (0x00F2,), (0x00F3,), (0x00F4,), (0x00F5,), (0x00F6,), (0x00F7,),
  (0x00F8,), (0x00F9,), (0x00FA,), (0x00FB,), (0x00FC,), (0x00FD,), (0x00FE,), (0x00FF,))
graphdata.defgsets["300819"] = ("ir006/smartquotes", "ir100", "nil", "nil")

# LaTeX "LY1" or "nANSI" charset (extension of old Windows-1252 version, thus € located differently)
graphdata.rhses["201252"] = (
  (0x0141,), (0x0027,), (0x201A,), (0x0192,), (0x201E,), (0x2026,), (0x2020,), (0x2021,),
  (0x02C6,), (0x2030,), (0x0160,), (0x2039,), (0x0152,), (0x017D,), (0x005E,), (0x2212,),
  (0x0142,), (0x2018,), (0x2019,), (0x201C,), (0x201D,), (0x2022,), (0x2013,), (0x2014,),
  (0x02DC,), (0x2122,), (0x0161,), (0x203A,), (0x0153,), (0x017E,), (0x007E,), (0x0178,),
  (0x00A0,), (0x00A1,), (0x00A2,), (0x00A3,), (0x00A4,), (0x00A5,), (0x00A6,), (0x00A7,),
  (0x00A8,), (0x00A9,), (0x00AA,), (0x00AB,), (0x00AC,), (0x00AD,), (0x00AE,), (0x00AF,),
  (0x00B0,), (0x00B1,), (0x00B2,), (0x00B3,), (0x00B4,), (0x00B5,), (0x00B6,), (0x00B7,),
  (0x00B8,), (0x00B9,), (0x00BA,), (0x00BB,), (0x00BC,), (0x00BD,), (0x00BE,), (0x00BF,),
  (0x00C0,), (0x00C1,), (0x00C2,), (0x00C3,), (0x00C4,), (0x00C5,), (0x00C6,), (0x00C7,),
  (0x00C8,), (0x00C9,), (0x00CA,), (0x00CB,), (0x00CC,), (0x00CD,), (0x00CE,), (0x00CF,),
  (0x00D0,), (0x00D1,), (0x00D2,), (0x00D3,), (0x00D4,), (0x00D5,), (0x00D6,), (0x00D7,),
  (0x00D8,), (0x00D9,), (0x00DA,), (0x00DB,), (0x00DC,), (0x00DD,), (0x00DE,), (0x00DF,),
  (0x00E0,), (0x00E1,), (0x00E2,), (0x00E3,), (0x00E4,), (0x00E5,), (0x00E6,), (0x00E7,),
  (0x00E8,), (0x00E9,), (0x00EA,), (0x00EB,), (0x00EC,), (0x00ED,), (0x00EE,), (0x00EF,),
  (0x00F0,), (0x00F1,), (0x00F2,), (0x00F3,), (0x00F4,), (0x00F5,), (0x00F6,), (0x00F7,),
  (0x00F8,), (0x00F9,), (0x00FA,), (0x00FB,), (0x00FC,), (0x00FD,), (0x00FE,), (0x00FF,))
graphdata.defgsets["201252"] = ("ir006/smartquotes", "ir100", "nil", "nil")

# LaTeX "8R" or "TeX Base1" charset (extension of the old Windows-1252 version, thus Ž/ž
#   located differently)
graphdata.rhses["301252"] = (
  (0x20AC,), (0x222B,), (0x201A,), (0x0192,), (0x201E,), (0x2026,), (0x2020,), (0x2021,),
  (0x02C6,), (0x2030,), (0x0160,), (0x2039,), (0x0152,), (0x2126,), (0x221A,), (0x2248,),
  (0x0090,), (0x2018,), (0x2019,), (0x201C,), (0x201D,), (0x2022,), (0x2013,), (0x2014,),
  (0x02DC,), (0x2122,), (0x0161,), (0x203A,), (0x0153,), (0x2206,), (0x25CA,), (0x0178,),
  (0x00A0,), (0x00A1,), (0x00A2,), (0x00A3,), (0x00A4,), (0x00A5,), (0x00A6,), (0x00A7,),
  (0x00A8,), (0x00A9,), (0x00AA,), (0x00AB,), (0x00AC,), (0x00AD,), (0x00AE,), (0x00AF,),
  (0x00B0,), (0x00B1,), (0x00B2,), (0x00B3,), (0x00B4,), (0x00B5,), (0x00B6,), (0x00B7,),
  (0x00B8,), (0x00B9,), (0x00BA,), (0x00BB,), (0x00BC,), (0x00BD,), (0x00BE,), (0x00BF,),
  (0x00C0,), (0x00C1,), (0x00C2,), (0x00C3,), (0x00C4,), (0x00C5,), (0x00C6,), (0x00C7,),
  (0x00C8,), (0x00C9,), (0x00CA,), (0x00CB,), (0x00CC,), (0x00CD,), (0x00CE,), (0x00CF,),
  (0x00D0,), (0x00D1,), (0x00D2,), (0x00D3,), (0x00D4,), (0x00D5,), (0x00D6,), (0x00D7,),
  (0x00D8,), (0x00D9,), (0x00DA,), (0x00DB,), (0x00DC,), (0x00DD,), (0x00DE,), (0x00DF,),
  (0x00E0,), (0x00E1,), (0x00E2,), (0x00E3,), (0x00E4,), (0x00E5,), (0x00E6,), (0x00E7,),
  (0x00E8,), (0x00E9,), (0x00EA,), (0x00EB,), (0x00EC,), (0x00ED,), (0x00EE,), (0x00EF,),
  (0x00F0,), (0x00F1,), (0x00F2,), (0x00F3,), (0x00F4,), (0x00F5,), (0x00F6,), (0x00F7,),
  (0x00F8,), (0x00F9,), (0x00FA,), (0x00FB,), (0x00FC,), (0x00FD,), (0x00FE,), (0x00FF,))
graphdata.defgsets["301252"] = ("ir006/smartquotes", "ir100", "nil", "nil")

# LaTeX "L7X" charset (extended Windows-1257)
graphdata.rhses["101257"] = (
  (0x20AC,), (0x0081,), (0x201A,), (0x0192,), (0x201E,), (0x2026,), (0x2020,), (0x2021,),
  (0x0088,), (0x2030,), (0x008A,), (0x2039,), (0x0152,), (0x00A8,), (0x02C7,), (0x00B8,),
  (0x0090,), (0x2018,), (0x2019,), (0x201C,), (0x201D,), (0x2022,), (0x2013,), (0x2014,),
  (0x0098,), (0x2122,), (0x009A,), (0x203A,), (0x0153,), (0x00AF,), (0x02DB,), (0x009F,),
  (0x00A0,), None,      (0x00A2,), (0x00A3,), (0x00A4,), None,      (0x00A6,), (0x00A7,),
  (0x00D8,), (0x00A9,), (0x0156,), (0x00AB,), (0x00AC,), (0x00AD,), (0x00AE,), (0x00C6,),
  (0x00B0,), (0x00B1,), (0x00B2,), (0x00B3,), (0x00B4,), (0x00B5,), (0x00B6,), (0x00B7,),
  (0x00F8,), (0x00B9,), (0x0157,), (0x00BB,), (0x00BC,), (0x00BD,), (0x00BE,), (0x00E6,),
  (0x0104,), (0x012E,), (0x0100,), (0x0106,), (0x00C4,), (0x00C5,), (0x0118,), (0x0112,),
  (0x010C,), (0x00C9,), (0x0179,), (0x0116,), (0x0122,), (0x0136,), (0x012A,), (0x013B,),
  (0x0160,), (0x0143,), (0x0145,), (0x00D3,), (0x014C,), (0x00D5,), (0x00D6,), (0x00D7,),
  (0x0172,), (0x0141,), (0x015A,), (0x016A,), (0x00DC,), (0x017B,), (0x017D,), (0x00DF,),
  (0x0105,), (0x012F,), (0x0101,), (0x0107,), (0x00E4,), (0x00E5,), (0x0119,), (0x0113,),
  (0x010D,), (0x00E9,), (0x017A,), (0x0117,), (0x0123,), (0x0137,), (0x012B,), (0x013C,),
  (0x0161,), (0x0144,), (0x0146,), (0x00F3,), (0x014D,), (0x00F5,), (0x00F6,), (0x00F7,),
  (0x0173,), (0x0142,), (0x015B,), (0x016B,), (0x00FC,), (0x017C,), (0x017E,), (0x02D9,))
graphdata.defgsets["101257"] = ("ir006", "ir179", "nil", "nil")

graphdata.gsets["bookshelf-1-gl"] = (94, 1, (
               (0xFF65,), None,      None,      None,      None,      None,      None,
    None,      None,      None,      (0x207A,), None,      (0x207B,), None,      (0x002F, 0xF877),
    (0x2070,), (0x00B9,), (0x00B2,), (0x00B3,), (0x2074,), (0x2075,), (0x2076,), (0x2077,),
    (0x2078,), (0x2079,), None,      None,      None,      None,      None,      None,
    None,      (0x0100,), None,      (0x0107,), (0x0111,), None,      None,      (0x01E7,),
    (0x1E24,), (0x0130,), None,      (0x006B, 0x0311),
                                         (0x006C, 0x0325), (0x1E41,), (0x0144,), None,
    None,    None, (0x0072, 0x0325), (0x015F,), (0x1E6F,), None,      None,      None,
    None,      None,      (0x017A,), None,      None,      None,      None,      None,
    None,      (0x1D43,), (0x1D47,), (0x1D9C,), (0x1E0D,), (0x0259,), None,      (0x0121,),
    (0x1E25,), (0x2071,), (0x02B2,), (0x1D4F,),
                                         (0x0142,), (0x006D, 0x0325), (0x207F,), (0x014D,),
    None,    None, (0x0072, 0x0306), (0x1E63,), (0x1E6D,), None, (0x0076, 0x0306), (0x02B7,),
    (0x02E3,), (0x02B8,), (0x1DBB,), None,      None,      None,      None))
graphdata.rhses["995001"] = (
    None,      None,      None,      None,      (0x1EB9, 0x0302), None,      None,      None,
    None,      None,      (0x0160,), None,             None,      None,      None,      None,
    None,      None,      None,      None,             None,      None,      None,      None,
    None,      None,      (0x0161,), None,      (0x0153, 0x0304), None,      None,      None,
    (0x2009,), (0x006F, 0x035E, 0x006F), (0x006F, 0x035D, 0x006F), (0x0074, 0x035F, 0x0068),
                                                       (0x014B,), (0x0292,), None,      None,
    None,      None,      None,      None,             None,      None,      None,      None,
    None,      None,      None,      None,             (0x02B9,), None,      None,      None,
    None,      (0x2032,), None,      None,             None,      None,      None,      None,
    None,      None,      None,      None,             None,      None,      None,      (0x010C,),
    None,      None,      None,      None,             (0x012A,), None,      None,      None,
    None,      None,      None,      None,             None,      None,    (0x014C,), (0x00D7, 0xF877),
    None,      None,      None,      None,             None,      None,      None,      None,
    (0x0103,), (0x01CE,), (0x0101,), (0x0101, 0x0303),
                                  (0x0061, 0x030B), (0x0061, 0x032E), (0x00E6, 0x0304), None,
    (0x0115,), (0x011B,), (0x0113,), (0x0113, 0x0306),
                                                     (0x012B,), (0x01D0,), (0x012D,), (0x012B, 0x0306),
    (0x00F0,), None,    (0x014F,), (0x014D, 0x0306), (0x01D2,), (0x1ECD,), (0x0151,), (0x00F7, 0xF877),
    None,      (0x016D,), (0x016B,), (0x016B, 0x0306), (0x01D4,), (0x0233,), (0x00FE,), None)
graphdata.defgsets["995001"] = ("bookshelf-1-gl", "nil", "nil", "nil")

graphdata.gsets["bookshelf-2-gl"] = (94, 1, (
               (0xFF65,), None,      None,         None,      None,      None,      None,
    None,      None,      None,      (0x208A,),    None,      (0x208B,), None,      (0x002F, 0xF878),
    (0x2080,), (0x2081,), (0x2082,), (0x2083,),    (0x2084,), (0x2085,), (0x2086,), (0x2087,),
    (0x2088,), (0x2089,), None,      None,         None,      None,      None,      None,
    None, (0x0061, 0x0327), None,    (0x010D,),    None,      None,      None,      (0x011D,),
    None,      None,      None,      (0x1E33,),    (0x0141,), (0x1E3F,), (0x1E47,), None,
    None,      None,      (0x1E5B,), (0x015D,),    (0x1E6C,), None,      None,      None,
    None,      None,      (0x017B,), None,         None,      None,      None,      None,
    None, (0x2090,), (0x0062, 0xF878), (0x1E05E,), (0x1E0E,), (0x1E17,), None,      (0x011F,),
    (0x1E2B,), (0x1D62,), (0x2C7C,), (0x2096,),    (0x1E37,), (0x1E43,), (0x2099,), None,
    None,      None,      None,      (0x015B,),    (0x021B,), None,      None,      (0x209D,),
    (0x2093,), (0x209E,), (0x209F,), None,         None,      None,      None))
graphdata.rhses["995002"] = (
    (0xFF65,), None,      None,      None,      None,      None,      None,      None,
    None,      None,      None,      None,      None,      None,      None,      None,
    None,      None,      None,      None,      None,      None,      None,      None,
    None,      None,      None,      None,      None,      None,      None,      None,
    None,      None,      None, (0x0259, 0x0301), None,    None,      None,      None,
    None,      None,      None,      None,      None,      None,      None,      None,
    None,      None,      None,      None,      None,      None,      None,      None,
    None,      None,      None,      None,      None,      None,      None,      None,
    None,      None,      None,      None,      None,      None,      None,      None,
    None,      None,      None,      None,      None,      None,      None,      None,
    None,      None,      None,      None,      None,      None,      None,      (0x00D7, 0xF878),
    None,      None,      None,      None,      None,      None,      None,      None,
    None, (0x00E1, 0x0307), None,    None,      None,      None,      None,      None,
    (0x1EBD,), (0x0119,), (0x1EBF,), (0x0229,), (0x0268,), (0x1ECB,), None,      (0x0131,),
    None,      None, (0x006F, 0x0325), None,    None,      None,      None,      (0x00F7, 0xF878),
    None,      None,      None, (0x016F,), (0x016B, 0x0303), (0x00FD,), None,    None)
graphdata.defgsets["995002"] = ("bookshelf-2-gl", "nil", "nil", "nil")
