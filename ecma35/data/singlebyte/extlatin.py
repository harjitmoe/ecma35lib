#!/usr/bin/env python3
# -*- mode: python; coding: utf-8 -*-
# By HarJIT in 2019, 2020, 2022.

# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

from ecma35.data import graphdata
from ecma35.data.singlebyte import sbmapparsers as parsers

# NATS Supplement, for Nordic languages when the primary set is NATS Sweden/Finland
# Allocations rather clever: if interpreted as the primary set (i.e. single-shift not recognised),
#   - The Danish aesh and oethel (Æ, Ø) become the Swedish aesh and oethel (Ä, Ö).
#   - The A-grave, E-acute and U-umlaut lose their diacritics but keep their base letters.
#   - The D-stroke (in the reg never called an eth nor shown curly) becomes a regular D.
#   - The thorn becomes a P. This is the least clever of the seven (Y would have been cleverer).
graphdata.gsets["ir008-2"] = (94, 1,
    (None,) * 32 +
    ((0xC0,), None, None, (0x0110,), (0xC9,)) + (None,) * 10 + ((0xDE,), None, None, None, None, 
        (0xDC,), None, None, None, None, None, (0xC6,), (0xD8,), None, None) +
    (None, None) +
    ((0xE0,), None, None, (0x0111,), (0xE9,)) + (None,) * 10 + ((0xFE,), None, None, None, None, 
        (0xFC,), None, None, None, None, None, (0xE6,), (0xF8,), None, None))

# NATS Supplement, for Nordic languages when the primary set is NATS Denmark/Norway
# Same as the other one, but with Swedish aesh/oethel (and the Danish ones in the primary set), as
#   opposed to _vice versa_.
graphdata.gsets["ir009-2"] = (94, 1,
    (None,) * 32 +
    ((0xC0,), None, None, (0x0110,), (0xC9,)) + (None,) * 10 + ((0xDE,), None, None, None, None, 
        (0xDC,), None, None, None, None, None, (0xC4,), (0xD6,), None, None) +
    (None, None) +
    ((0xE0,), None, None, (0x0111,), (0xE9,)) + (None,) * 10 + ((0xFE,), None, None, None, None, 
        (0xFC,), None, None, None, None, None, (0xE4,), (0xF6,), None, None))

# DIN-31625 ISO-6438 African Latin supplement
graphdata.gsets["ir039"] = (94, 1, (
               None,      (0x0181,), (0x0187,), (0x018A,), (0x0189,), None,      (0x0190,),
    (0x018E,), None,      (0x0191,), (0x0193,), (0x0194,), (0x0126,), None,      (0x0197,),
    None,      None,      (0x0253,), (0x0188,), (0x0257,), (0x0256,), None,      (0x025B,),
    (0x0259,), None,      (0x0192,), (0x0260,), (0x0263,), (0x0127,), None,      (0x026A,),
    (0x0198,), None,      None,      None,      None,      None,      None,      (0x014A,),
    None,      (0x019F,), (0x0186,), (0x01A4,), None,      None,      None,      (0x01A9,),
    (0x0199,), (0x026C,), None,      (0x0271,), None,      (0x0273,), (0x0272,), (0x014B,),
    None,      (0x0275,), (0x0254,), (0x01A5,), None,      (0x027D,), None,      (0x0283,),
    (0x01AC,), (0x01AE,), None,      (0x01B1,), (0x01B2,), (0x03A7,), (0x01B3,), (0x01B7,),
    None,      None,      None,      None,      None,      None,      None,      None,
    (0x01AD,), (0x0288,), None,      (0x028A,), (0x028B,), (0x03C7,), (0x01B4,), (0x0292,),
    (0x0295,), (0x0294,), (0x0298,), (0x01C0,), (0x01C2,), (0x01C3,), (0x01C1,),
))

# ECMA-94:L1 ISO-8859-1 Latin-1 Western European RHS
graphdata.gsets["ir100"] = (96, 1, tuple((i,) for i in range(0xA0, 0x100)))

# ECMA-94:L2 ISO-8859-2 Latin-2 Central European RHS
graphdata.gsets["ir101"] = (96, 1, tuple((i,) for i in (
             0x00A0, 0x0104, 0x02D8, 0x0141, 0x00A4, 0x013D, 0x015A, 0x00A7, 
             0x00A8, 0x0160, 0x015E, 0x0164, 0x0179, 0x00AD, 0x017D, 0x017B, 
             0x00B0, 0x0105, 0x02DB, 0x0142, 0x00B4, 0x013E, 0x015B, 0x02C7, 
             0x00B8, 0x0161, 0x015F, 0x0165, 0x017A, 0x02DD, 0x017E, 0x017C, 
             0x0154, 0x00C1, 0x00C2, 0x0102, 0x00C4, 0x0139, 0x0106, 0x00C7, 
             0x010C, 0x00C9, 0x0118, 0x00CB, 0x011A, 0x00CD, 0x00CE, 0x010E, 
             0x0110, 0x0143, 0x0147, 0x00D3, 0x00D4, 0x0150, 0x00D6, 0x00D7, 
             0x0158, 0x016E, 0x00DA, 0x0170, 0x00DC, 0x00DD, 0x0162, 0x00DF, 
             0x0155, 0x00E1, 0x00E2, 0x0103, 0x00E4, 0x013A, 0x0107, 0x00E7, 
             0x010D, 0x00E9, 0x0119, 0x00EB, 0x011B, 0x00ED, 0x00EE, 0x010F, 
             0x0111, 0x0144, 0x0148, 0x00F3, 0x00F4, 0x0151, 0x00F6, 0x00F7, 
             0x0159, 0x016F, 0x00FA, 0x0171, 0x00FC, 0x00FD, 0x0163, 0x02D9)))

# ECMA-94:L3 ISO-8859-3 Latin-3 South European RHS
graphdata.gsets["ir109"] = (96, 1, tuple((i,) if i else None for i in (
             0x00A0, 0x0126, 0x02D8, 0x00A3, 0x00A4, None,   0x0124, 0x00A7, 
             0x00A8, 0x0130, 0x015E, 0x011E, 0x0134, 0x00AD, None,   0x017B, 
             0x00B0, 0x0127, 0x00B2, 0x00B3, 0x00B4, 0x00B5, 0x0125, 0x00B7, 
             0x00B8, 0x0131, 0x015F, 0x011F, 0x0135, 0x00BD, None,   0x017C, 
             0x00C0, 0x00C1, 0x00C2, None,   0x00C4, 0x010A, 0x0108, 0x00C7, 
             0x00C8, 0x00C9, 0x00CA, 0x00CB, 0x00CC, 0x00CD, 0x00CE, 0x00CF, 
             None,   0x00D1, 0x00D2, 0x00D3, 0x00D4, 0x0120, 0x00D6, 0x00D7, 
             0x011C, 0x00D9, 0x00DA, 0x00DB, 0x00DC, 0x016C, 0x015C, 0x00DF, 
             0x00E0, 0x00E1, 0x00E2, None,   0x00E4, 0x010B, 0x0109, 0x00E7, 
             0x00E8, 0x00E9, 0x00EA, 0x00EB, 0x00EC, 0x00ED, 0x00EE, 0x00EF, 
             None,   0x00F1, 0x00F2, 0x00F3, 0x00F4, 0x0121, 0x00F6, 0x00F7, 
             0x011D, 0x00F9, 0x00FA, 0x00FB, 0x00FC, 0x016D, 0x015D, 0x02D9)))

# ECMA-94:L4 ISO-8859-4 Latin-4 North European RHS
graphdata.gsets["ir110"] = (96, 1, tuple((i,) for i in (
             0x00A0, 0x0104, 0x0138, 0x0156, 0x00A4, 0x0128, 0x013B, 0x00A7, 
             0x00A8, 0x0160, 0x0112, 0x0122, 0x0166, 0x00AD, 0x017D, 0x00AF, 
             0x00B0, 0x0105, 0x02DB, 0x0157, 0x00B4, 0x0129, 0x013C, 0x02C7, 
             0x00B8, 0x0161, 0x0113, 0x0123, 0x0167, 0x014A, 0x017E, 0x014B, 
             0x0100, 0x00C1, 0x00C2, 0x00C3, 0x00C4, 0x00C5, 0x00C6, 0x012E, 
             0x010C, 0x00C9, 0x0118, 0x00CB, 0x0116, 0x00CD, 0x00CE, 0x012A, 
             0x0110, 0x0145, 0x014C, 0x0136, 0x00D4, 0x00D5, 0x00D6, 0x00D7, 
             0x00D8, 0x0172, 0x00DA, 0x00DB, 0x00DC, 0x0168, 0x016A, 0x00DF, 
             0x0101, 0x00E1, 0x00E2, 0x00E3, 0x00E4, 0x00E5, 0x00E6, 0x012F, 
             0x010D, 0x00E9, 0x0119, 0x00EB, 0x0117, 0x00ED, 0x00EE, 0x012B, 
             0x0111, 0x0146, 0x014D, 0x0137, 0x00F4, 0x00F5, 0x00F6, 0x00F7, 
             0x00F8, 0x0173, 0x00FA, 0x00FB, 0x00FC, 0x0169, 0x016B, 0x02D9)))

# CSA Z243.4:1985 supplementary set (i.e. precomposed characters absent in IR-121 / IR-122)
graphdata.gsets["ir123"] = (96, 1, (
    (0xA0,),   (0xA1,),   (0x22,),   (0xA3,),   (0xA2,),   (0xA5,),   (0xB1,),   (0xB4,), 
    (0x207D,), (0x207E,), (0xBD,),   (0x207A,), (0xB8,),   (0xAD,),   (0xB7,),   (0x207B,), 
    (0x2070,), (0xB9,),   (0xB2,),   (0xB3,),   (0x2074,), (0x2075,), (0x2076,), (0x2077,), 
    (0x2078,), (0x2079,), (0xBC,),   (0xBE,),   (0x2264,), (0x2260,), (0x2265,), (0xBF,), 
    (0xC0,),   (0xC1,),   (0xC2,),   (0xC7,),   (0xC8,),   (0xC9,),   (0xCA,),   (0xCB,), 
    (0xCD,),   (0xCE,),   (0xCF,),   (0xD1,),   (0xD3,),   (0xD4,),   (0xD9,),   (0xDA,), 
    (0xDB,),   (0xDC,),   (0xAE,),   (0xA7,),   (0xB6,),   (0xB5,),   (0xAA,),   (0xBA,), 
    (0x2018,), (0x2019,), (0x201C,), (0x201D,), (0xAB,),   (0xBB,),   (0xB0,),   (0xA6,), 
    (0xE0,),   (0xE1,),   (0xE2,),   (0xE7,),   (0xE8,),   (0xE9,),   (0xEA,),   (0xEB,), 
    (0xED,),   (0xEE,),   (0xEF,),   (0xF1,),   (0xF3,),   (0xF4,),   (0xF9,),   (0xFA,), 
    (0xFB,),   (0xFC,),   (0xA9,),   (0x2500,), (0x2502,), (0x2514,), (0x2518,), (0x2510,), 
    (0x250C,), (0x251C,), (0x2534,), (0x2524,), (0x252C,), (0x253C,), (0xAC,),   (0x2588,),
))

# ČSN 369103 (minor Latin-2 mod for RHS use with previous IRV, i.e. swapping ¤ and $)
graphdata.gsets["ir139"] = (96, 1, tuple((i,) for i in (
             0x00A0, 0x0104, 0x02D8, 0x0141, 0x0024, 0x013D, 0x015A, 0x00A7, 
             0x00A8, 0x0160, 0x015E, 0x0164, 0x0179, 0x00AD, 0x017D, 0x017B, 
             0x00B0, 0x0105, 0x02DB, 0x0142, 0x00B4, 0x013E, 0x015B, 0x02C7, 
             0x00B8, 0x0161, 0x015F, 0x0165, 0x017A, 0x02DD, 0x017E, 0x017C, 
             0x0154, 0x00C1, 0x00C2, 0x0102, 0x00C4, 0x0139, 0x0106, 0x00C7, 
             0x010C, 0x00C9, 0x0118, 0x00CB, 0x011A, 0x00CD, 0x00CE, 0x010E, 
             0x0110, 0x0143, 0x0147, 0x00D3, 0x00D4, 0x0150, 0x00D6, 0x00D7, 
             0x0158, 0x016E, 0x00DA, 0x0170, 0x00DC, 0x00DD, 0x0162, 0x00DF, 
             0x0155, 0x00E1, 0x00E2, 0x0103, 0x00E4, 0x013A, 0x0107, 0x00E7, 
             0x010D, 0x00E9, 0x0119, 0x00EB, 0x011B, 0x00ED, 0x00EE, 0x010F, 
             0x0111, 0x0144, 0x0148, 0x00F3, 0x00F4, 0x0151, 0x00F6, 0x00F7, 
             0x0159, 0x016F, 0x00FA, 0x0171, 0x00FC, 0x00FD, 0x0163, 0x02D9)))

# ECMA-128 ISO-8859-9 Latin-5 Turkish RHS
graphdata.gsets["ir148"] = (96, 1, tuple((i,) for i in (
             0x00A0, 0x00A1, 0x00A2, 0x00A3, 0x00A4, 0x00A5, 0x00A6, 0x00A7, 
             0x00A8, 0x00A9, 0x00AA, 0x00AB, 0x00AC, 0x00AD, 0x00AE, 0x00AF, 
             0x00B0, 0x00B1, 0x00B2, 0x00B3, 0x00B4, 0x00B5, 0x00B6, 0x00B7, 
             0x00B8, 0x00B9, 0x00BA, 0x00BB, 0x00BC, 0x00BD, 0x00BE, 0x00BF, 
             0x00C0, 0x00C1, 0x00C2, 0x00C3, 0x00C4, 0x00C5, 0x00C6, 0x00C7, 
             0x00C8, 0x00C9, 0x00CA, 0x00CB, 0x00CC, 0x00CD, 0x00CE, 0x00CF, 
             0x011E, 0x00D1, 0x00D2, 0x00D3, 0x00D4, 0x00D5, 0x00D6, 0x00D7, 
             0x00D8, 0x00D9, 0x00DA, 0x00DB, 0x00DC, 0x0130, 0x015E, 0x00DF, 
             0x00E0, 0x00E1, 0x00E2, 0x00E3, 0x00E4, 0x00E5, 0x00E6, 0x00E7, 
             0x00E8, 0x00E9, 0x00EA, 0x00EB, 0x00EC, 0x00ED, 0x00EE, 0x00EF, 
             0x011F, 0x00F1, 0x00F2, 0x00F3, 0x00F4, 0x00F5, 0x00F6, 0x00F7, 
             0x00F8, 0x00F9, 0x00FA, 0x00FB, 0x00FC, 0x0131, 0x015F, 0x00FF)))

# ISO 10367 supplementary set (containing characters in neither ISO-8859-2 nor the intersection
#   of ISO-8859-1 and ISO-8859-9, but listed in Annex A of T.51; intended for use in a G3 set).
#   Contrast IR-152.
graphdata.gsets["ir154"] = (96, 1, (
    None,      None,      (0x0100,), (0x0108,), (0x010A,), None,      (0x0116,), (0x0112,), 
    (0x011C,), (0x2018,), (0x201C,), (0x2122,), (0x2190,), (0x2191,), (0x2192,), (0x2193,), 
    None,      None,      (0x0101,), (0x0109,), (0x010B,), (0xF0,),   (0x0117,), (0x0113,), 
    (0x011D,), (0x2019,), (0x201D,), (0x266A,), (0x215B,), (0x215C,), (0x215D,), (0x215E,), 
    None,      (0x011E,), (0x0120,), (0x0122,), (0x0124,), (0x0126,), (0x0128,), (0x0130,), 
    (0x012A,), (0x012E,), (0x0132,), (0x0134,), (0x0136,), (0x013B,), (0x013F,), (0x0145,), 
    # 0x2015 per WG3 N 454: http://open-std.org/JTC1/sc2/wg3/docs/n454.pdf
    (0x2015,), (0x014A,), (0x014C,), (0x0152,), (0x0156,), (0x015C,), (0x0166,), (0xDE,),   
    (0x0168,), (0x016C,), (0x016A,), (0x0172,), (0x0174,), (0xDD,),   (0x0176,), (0x0178,), 
    (0x2126,), (0x011F,), (0x0121,), (0x0123,), (0x0125,), (0x0127,), (0x0129,), (0x0131,), 
    (0x012B,), (0x012F,), (0x0133,), (0x0135,), (0x0137,), (0x013C,), (0x0140,), (0x0146,), 
    (0x0138,), (0x014B,), (0x014D,), (0x0153,), (0x0157,), (0x015D,), (0x0167,), (0xFE,),   
    (0x0169,), (0x016D,), (0x016B,), (0x0173,), (0x0175,), (0xFD,),   (0x0177,), (0x0149,),
))

# ECMA-144 ISO-8859-10 Latin-6 Nordic RHS
graphdata.gsets["ir157"] = (96, 1, tuple((i,) for i in (
             0x00A0, 0x0104, 0x0112, 0x0122, 0x012A, 0x0128, 0x0136, 0x00A7, 
             0x013B, 0x0110, 0x0160, 0x0166, 0x017D, 0x00AD, 0x016A, 0x014A, 
             0x00B0, 0x0105, 0x0113, 0x0123, 0x012B, 0x0129, 0x0137, 0x00B7, 
             0x013C, 0x0111, 0x0161, 0x0167, 0x017E, 0x2015, 0x016B, 0x014B, 
             0x0100, 0x00C1, 0x00C2, 0x00C3, 0x00C4, 0x00C5, 0x00C6, 0x012E, 
             0x010C, 0x00C9, 0x0118, 0x00CB, 0x0116, 0x00CD, 0x00CE, 0x00CF, 
             0x00D0, 0x0145, 0x014C, 0x00D3, 0x00D4, 0x00D5, 0x00D6, 0x0168, 
             0x00D8, 0x0172, 0x00DA, 0x00DB, 0x00DC, 0x00DD, 0x00DE, 0x00DF, 
             0x0101, 0x00E1, 0x00E2, 0x00E3, 0x00E4, 0x00E5, 0x00E6, 0x012F, 
             0x010D, 0x00E9, 0x0119, 0x00EB, 0x0117, 0x00ED, 0x00EE, 0x00EF, 
             0x00F0, 0x0146, 0x014D, 0x00F3, 0x00F4, 0x00F5, 0x00F6, 0x0169, 
             0x00F8, 0x0173, 0x00FA, 0x00FB, 0x00FC, 0x00FD, 0x00FE, 0x0138)))

# Single-shift supplement to ISO-8859-6 for Saami; the infamous "High Ogonek" set
graphdata.gsets["ir158"] = (96, 1, (
    (0x00B4,), None,      None,      None,      None,      None,      None,      None,
    None,      None,      None,      None,      None,      None,      None,      None,
    (0x02BD,), None,      None,      None,      None,      None,      None,      None,
    None,      None,      None,      None,      None,      None,      None,      None,
    (0x0102,), (0xC0,),   (0x01DE,), (0x01E0,), (0x01E2,), (0x0114,), (0xC8,),   (0x01E4,),
    (0x01E6,), (0x01E8,), (0x014E,), (0xD2,),   (0x01EA,), (0x01EC,), (0x01B7,), (0x01EE,),
    None,      None,      None,      None,      None,      None,      None,      None,
    None,      None,      None,      None,      None,      None,      None,      None,
    (0x0103,), (0xE0,),   (0x01DF,), (0x01E1,), (0x01E3,), (0x0115,), (0xE8,),   (0x01E5,),
    (0x01E7,), (0x01E9,), (0x014F,), (0xF2,),   (0x01EB,), (0x01ED,), (0x0292,), (0x01EF,),
    None,      None,      None,      None,      None,      None,      None,      None,
    None,      None,      None,      None,      None,      None,      None,      None,
))

# ISO-8859-13 Latin-7 Baltic Rim RHS
graphdata.gsets["ir179"] = (96, 1, tuple((i,) for i in (
             0x00A0, 0x201D, 0x00A2, 0x00A3, 0x00A4, 0x201E, 0x00A6, 0x00A7, 
             0x00D8, 0x00A9, 0x0156, 0x00AB, 0x00AC, 0x00AD, 0x00AE, 0x00C6, 
             0x00B0, 0x00B1, 0x00B2, 0x00B3, 0x201C, 0x00B5, 0x00B6, 0x00B7, 
             0x00F8, 0x00B9, 0x0157, 0x00BB, 0x00BC, 0x00BD, 0x00BE, 0x00E6, 
             0x0104, 0x012E, 0x0100, 0x0106, 0x00C4, 0x00C5, 0x0118, 0x0112, 
             0x010C, 0x00C9, 0x0179, 0x0116, 0x0122, 0x0136, 0x012A, 0x013B, 
             0x0160, 0x0143, 0x0145, 0x00D3, 0x014C, 0x00D5, 0x00D6, 0x00D7, 
             0x0172, 0x0141, 0x015A, 0x016A, 0x00DC, 0x017B, 0x017D, 0x00DF, 
             0x0105, 0x012F, 0x0101, 0x0107, 0x00E4, 0x00E5, 0x0119, 0x0113, 
             0x010D, 0x00E9, 0x017A, 0x0117, 0x0123, 0x0137, 0x012B, 0x013C, 
             0x0161, 0x0144, 0x0146, 0x00F3, 0x014D, 0x00F5, 0x00F6, 0x00F7, 
             0x0173, 0x0142, 0x015B, 0x016B, 0x00FC, 0x017C, 0x017E, 0x2019)))

# ISO 8859 Adaptation for Welsh (ancestor to ISO-8859-14), RHS
graphdata.gsets["ir182"] = (96, 1, (
    (0xA0,), (0xA1,), (0xA2,), (0xA3,), (0xA4,), (0xA5,), (0xA6,), (0xA7,),
    (0x1E80,), (0xA9,), (0x1E82,), (0xAB,), (0x1EF2,), (0xAD,), (0xAE,), (0x0178,),
    (0xB0,), (0xB1,), (0xB2,), (0xB3,), (0xB4,), (0xB5,), (0xB6,), (0xB7,),
    (0x1E81,), (0xB9,), (0x1E83,), (0xBB,), (0x1EF3,), (0x1E84,), (0x1E85,), (0xBF,),
    (0xC0,), (0xC1,), (0xC2,), (0xC3,), (0xC4,), (0xC5,), (0xC6,), (0xC7,),
    (0xC8,), (0xC9,), (0xCA,), (0xCB,), (0xCC,), (0xCD,), (0xCE,), (0xCF,),
    (0x0174,), (0xD1,), (0xD2,), (0xD3,), (0xD4,), (0xD5,), (0xD6,), (0xD7,),
    (0xD8,), (0xD9,), (0xDA,), (0xDB,), (0xDC,), (0xDD,), (0x0176,), (0xDF,),
    (0xE0,), (0xE1,), (0xE2,), (0xE3,), (0xE4,), (0xE5,), (0xE6,), (0xE7,),
    (0xE8,), (0xE9,), (0xEA,), (0xEB,), (0xEC,), (0xED,), (0xEE,), (0xEF,),
    (0x0175,), (0xF1,), (0xF2,), (0xF3,), (0xF4,), (0xF5,), (0xF6,), (0xF7,),
    (0xF8,), (0xF9,), (0xFA,), (0xFB,), (0xFC,), (0xFD,), (0x0177,), (0xFF,),
))

# ISO 8859 Adaptation for Saami (RHS)
graphdata.gsets["ir197"] = (96, 1, (
    (0xA0,), (0x010C,), (0x010D,), (0x0110,), (0x0111,), (0x01E4,), (0x01E5,), (0xA7,),
    (0x01E6,), (0xA9,), (0x01E7,), (0xAB,), (0x01E8,), (0xAD,), (0x01E9,), (0x014A,),
    (0xB0,), (0x014B,), (0x0160,), (0x0161,), (0xB4,), (0x0166,), (0xB6,), (0xB7,),
    (0x0167,), (0x017D,), (0x017E,), (0xBB,), (0x01B7,), (0x0292,), (0x01EE,), (0x01EF,),
    (0xC0,), (0xC1,), (0xC2,), (0xC3,), (0xC4,), (0xC5,), (0xC6,), (0xC7,),
    (0xC8,), (0xC9,), (0xCA,), (0xCB,), (0xCC,), (0xCD,), (0xCE,), (0xCF,),
    (0xD0,), (0xD1,), (0xD2,), (0xD3,), (0xD4,), (0xD5,), (0xD6,), (0xD7,),
    (0xD8,), (0xD9,), (0xDA,), (0xDB,), (0xDC,), (0xDD,), (0xDE,), (0xDF,),
    (0xE0,), (0xE1,), (0xE2,), (0xE3,), (0xE4,), (0xE5,), (0xE6,), (0xE7,),
    (0xE8,), (0xE9,), (0xEA,), (0xEB,), (0xEC,), (0xED,), (0xEE,), (0xEF,),
    (0xF0,), (0xF1,), (0xF2,), (0xF3,), (0xF4,), (0xF5,), (0xF6,), (0xF7,),
    (0xF8,), (0xF9,), (0xFA,), (0xFB,), (0xFC,), (0xFD,), (0xFE,), (0xFF,),
))

# ISO-8859-14 Latin-8 Celtic RHS
graphdata.gsets["ir199"] = (96, 1, tuple((i,) for i in (
             0x00A0, 0x1E02, 0x1E03, 0x00A3, 0x010A, 0x010B, 0x1E0A, 0x00A7, 
             0x1E80, 0x00A9, 0x1E82, 0x1E0B, 0x1EF2, 0x00AD, 0x00AE, 0x0178, 
             0x1E1E, 0x1E1F, 0x0120, 0x0121, 0x1E40, 0x1E41, 0x00B6, 0x1E56, 
             0x1E81, 0x1E57, 0x1E83, 0x1E60, 0x1EF3, 0x1E84, 0x1E85, 0x1E61, 
             0x00C0, 0x00C1, 0x00C2, 0x00C3, 0x00C4, 0x00C5, 0x00C6, 0x00C7, 
             0x00C8, 0x00C9, 0x00CA, 0x00CB, 0x00CC, 0x00CD, 0x00CE, 0x00CF, 
             0x0174, 0x00D1, 0x00D2, 0x00D3, 0x00D4, 0x00D5, 0x00D6, 0x1E6A, 
             0x00D8, 0x00D9, 0x00DA, 0x00DB, 0x00DC, 0x00DD, 0x0176, 0x00DF, 
             0x00E0, 0x00E1, 0x00E2, 0x00E3, 0x00E4, 0x00E5, 0x00E6, 0x00E7, 
             0x00E8, 0x00E9, 0x00EA, 0x00EB, 0x00EC, 0x00ED, 0x00EE, 0x00EF, 
             0x0175, 0x00F1, 0x00F2, 0x00F3, 0x00F4, 0x00F5, 0x00F6, 0x1E6B, 
             0x00F8, 0x00F9, 0x00FA, 0x00FB, 0x00FC, 0x00FD, 0x0177, 0x00FF)))

# ISO-8859-15 Latin-9 Latin-0 New Western European RHS
graphdata.gsets["ir203"] = (96, 1, tuple((i,) for i in (
             0x00A0, 0x00A1, 0x00A2, 0x00A3, 0x20AC, 0x00A5, 0x0160, 0x00A7, 
             0x0161, 0x00A9, 0x00AA, 0x00AB, 0x00AC, 0x00AD, 0x00AE, 0x00AF, 
             0x00B0, 0x00B1, 0x00B2, 0x00B3, 0x017D, 0x00B5, 0x00B6, 0x00B7, 
             0x017E, 0x00B9, 0x00BA, 0x00BB, 0x0152, 0x0153, 0x0178, 0x00BF, 
             0x00C0, 0x00C1, 0x00C2, 0x00C3, 0x00C4, 0x00C5, 0x00C6, 0x00C7, 
             0x00C8, 0x00C9, 0x00CA, 0x00CB, 0x00CC, 0x00CD, 0x00CE, 0x00CF, 
             0x00D0, 0x00D1, 0x00D2, 0x00D3, 0x00D4, 0x00D5, 0x00D6, 0x00D7, 
             0x00D8, 0x00D9, 0x00DA, 0x00DB, 0x00DC, 0x00DD, 0x00DE, 0x00DF, 
             0x00E0, 0x00E1, 0x00E2, 0x00E3, 0x00E4, 0x00E5, 0x00E6, 0x00E7, 
             0x00E8, 0x00E9, 0x00EA, 0x00EB, 0x00EC, 0x00ED, 0x00EE, 0x00EF, 
             0x00F0, 0x00F1, 0x00F2, 0x00F3, 0x00F4, 0x00F5, 0x00F6, 0x00F7, 
             0x00F8, 0x00F9, 0x00FA, 0x00FB, 0x00FC, 0x00FD, 0x00FE, 0x00FF)))

# Euro update of ECMA-94:L1 ISO-8859-1 Latin-1 Western European RHS
graphdata.gsets["ir204"] = (96, 1, tuple((i,) for i in (
             0x00A0, 0x00A1, 0x00A2, 0x00A3, 0x20AC, 0x00A5, 0x00A6, 0x00A7, 
             )) + tuple((i,) for i in range(0xA8, 0x100)))
# Euro update of ECMA-94:L4 ISO-8859-4 Latin-4 North European RHS
graphdata.gsets["ir205"] = (96, 1, tuple((i,) for i in (
             0x00A0, 0x0104, 0x0138, 0x0156, 0x20AC, 0x0128, 0x013B, 0x00A7, 
             0x00A8, 0x0160, 0x0112, 0x0122, 0x0166, 0x00AD, 0x017D, 0x00AF, 
             0x00B0, 0x0105, 0x02DB, 0x0157, 0x00B4, 0x0129, 0x013C, 0x02C7, 
             0x00B8, 0x0161, 0x0113, 0x0123, 0x0167, 0x014A, 0x017E, 0x014B, 
             0x0100, 0x00C1, 0x00C2, 0x00C3, 0x00C4, 0x00C5, 0x00C6, 0x012E, 
             0x010C, 0x00C9, 0x0118, 0x00CB, 0x0116, 0x00CD, 0x00CE, 0x012A, 
             0x0110, 0x0145, 0x014C, 0x0136, 0x00D4, 0x00D5, 0x00D6, 0x00D7, 
             0x00D8, 0x0172, 0x00DA, 0x00DB, 0x00DC, 0x0168, 0x016A, 0x00DF, 
             0x0101, 0x00E1, 0x00E2, 0x00E3, 0x00E4, 0x00E5, 0x00E6, 0x012F, 
             0x010D, 0x00E9, 0x0119, 0x00EB, 0x0117, 0x00ED, 0x00EE, 0x012B, 
             0x0111, 0x0146, 0x014D, 0x0137, 0x00F4, 0x00F5, 0x00F6, 0x00F7, 
             0x00F8, 0x0173, 0x00FA, 0x00FB, 0x00FC, 0x0169, 0x016B, 0x02D9)))
# Euro update of ISO-8859-13 Latin-7 Baltic Rim RHS
graphdata.gsets["ir206"] = (96, 1, tuple((i,) for i in (
             0x00A0, 0x201D, 0x00A2, 0x00A3, 0x20AC, 0x201E, 0x00A6, 0x00A7, 
             0x00D8, 0x00A9, 0x0156, 0x00AB, 0x00AC, 0x00AD, 0x00AE, 0x00C6, 
             0x00B0, 0x00B1, 0x00B2, 0x00B3, 0x201C, 0x00B5, 0x00B6, 0x00B7, 
             0x00F8, 0x00B9, 0x0157, 0x00BB, 0x00BC, 0x00BD, 0x00BE, 0x00E6, 
             0x0104, 0x012E, 0x0100, 0x0106, 0x00C4, 0x00C5, 0x0118, 0x0112, 
             0x010C, 0x00C9, 0x0179, 0x0116, 0x0122, 0x0136, 0x012A, 0x013B, 
             0x0160, 0x0143, 0x0145, 0x00D3, 0x014C, 0x00D5, 0x00D6, 0x00D7, 
             0x0172, 0x0141, 0x015A, 0x016A, 0x00DC, 0x017B, 0x017D, 0x00DF, 
             0x0105, 0x012F, 0x0101, 0x0107, 0x00E4, 0x00E5, 0x0119, 0x0113, 
             0x010D, 0x00E9, 0x017A, 0x0117, 0x0123, 0x0137, 0x012B, 0x013C, 
             0x0161, 0x0144, 0x0146, 0x00F3, 0x014D, 0x00F5, 0x00F6, 0x00F7, 
             0x0173, 0x0142, 0x015B, 0x016B, 0x00FC, 0x017C, 0x017E, 0x2019)))

# ISO 8859 Adaptation for Saami and Romani (RHS)
graphdata.gsets["ir209"] = (96, 1, (
    (0xA0,), (0x010C,), (0x010D,), (0x0110,), (0x0111,), (0x01E4,), (0x01E5,), (0xA7,),
    (0x01E6,), (0xA9,), (0x01E7,), (0x021E,), (0x01E8,), (0xAD,), (0x01E9,), (0x014A,),
    (0xB0,), (0x014B,), (0x0160,), (0x0161,), (0xB4,), (0x0166,), (0xB6,), (0xB7,),
    (0x0167,), (0x017D,), (0x017E,), (0x021F,), (0x01B7,), (0x0292,), (0x01EE,), (0x01EF,),
    (0xC0,), (0xC1,), (0xC2,), (0xC3,), (0xC4,), (0xC5,), (0xC6,), (0xC7,),
    (0xC8,), (0xC9,), (0xCA,), (0xCB,), (0xCC,), (0xCD,), (0xCE,), (0xCF,),
    (0xD0,), (0xD1,), (0xD2,), (0xD3,), (0xD4,), (0xD5,), (0xD6,), (0xD7,),
    (0xD8,), (0xD9,), (0xDA,), (0xDB,), (0xDC,), (0xDD,), (0xDE,), (0xDF,),
    (0xE0,), (0xE1,), (0xE2,), (0xE3,), (0xE4,), (0xE5,), (0xE6,), (0xE7,),
    (0xE8,), (0xE9,), (0xEA,), (0xEB,), (0xEC,), (0xED,), (0xEE,), (0xEF,),
    (0xF0,), (0xF1,), (0xF2,), (0xF3,), (0xF4,), (0xF5,), (0xF6,), (0xF7,),
    (0xF8,), (0xF9,), (0xFA,), (0xFB,), (0xFC,), (0xFD,), (0xFE,), (0xFF,),
))

# SR-14111 ISO-8859-16 Latin-10 South-Eastern European RHS
graphdata.gsets["ir226"] = (96, 1, tuple((i,) for i in (
             0x00A0, 0x0104, 0x0105, 0x0141, 0x20AC, 0x201E, 0x0160, 0x00A7, 
             0x0161, 0x00A9, 0x0218, 0x00AB, 0x0179, 0x00AD, 0x017A, 0x017B, 
             0x00B0, 0x00B1, 0x010C, 0x0142, 0x017D, 0x201D, 0x00B6, 0x00B7, 
             0x017E, 0x010D, 0x0219, 0x00BB, 0x0152, 0x0153, 0x0178, 0x017C, 
             0x00C0, 0x00C1, 0x00C2, 0x0102, 0x00C4, 0x0106, 0x00C6, 0x00C7, 
             0x00C8, 0x00C9, 0x00CA, 0x00CB, 0x00CC, 0x00CD, 0x00CE, 0x00CF, 
             0x0110, 0x0143, 0x00D2, 0x00D3, 0x00D4, 0x0150, 0x00D6, 0x015A, 
             0x0170, 0x00D9, 0x00DA, 0x00DB, 0x00DC, 0x0118, 0x021A, 0x00DF, 
             0x00E0, 0x00E1, 0x00E2, 0x0103, 0x00E4, 0x0107, 0x00E6, 0x00E7, 
             0x00E8, 0x00E9, 0x00EA, 0x00EB, 0x00EC, 0x00ED, 0x00EE, 0x00EF, 
             0x0111, 0x0144, 0x00F2, 0x00F3, 0x00F4, 0x0151, 0x00F6, 0x015B, 
             0x0171, 0x00F9, 0x00FA, 0x00FB, 0x00FC, 0x0119, 0x021B, 0x00FF)))

# TDS 565 7-bit Turkmen
graphdata.gsets["ir230"] = (94, 1, ((0x21,), (0x22,), (0x23,), (0x24,), (0x25,), (0x26,), (0x27,), (0x28,), (0x29,), (0x2A,), (0x2B,), (0x2C,), (0x2D,), (0x2E,), (0x2F,), (0x30,), (0x31,), (0x32,), (0x33,), (0x34,), (0x35,), (0x36,), (0x37,), (0x38,), (0x39,), (0x3A,), (0x3B,), (0x3C,), (0x3D,), (0x3E,), (0x3F,), (0x40,), (0x41,), (0x42,), (0xC7,), (0x44,), (0x45,), (0xC4,), (0x46,), (0x47,), (0x48,), (0x49,), (0x4A,), (0x017D,), (0x4B,), (0x4C,), (0x4D,), (0x4E,), (0x0147,), (0x4F,), (0xD6,), (0x50,), (0x52,), (0x53,), (0x015E,), (0x54,), (0x55,), (0xDC,), (0x57,), (0x59,), (0xDD,), (0x5A,), (0x5F,), (0x2116,), (0x61,), (0x62,), (0xE7,), (0x64,), (0x65,), (0xE4,), (0x66,), (0x67,), (0x68,), (0x69,), (0x6A,), (0x017E,), (0x6B,), (0x6C,), (0x6D,), (0x6E,), (0x0148,), (0x6F,), (0xF6,), (0x70,), (0x72,), (0x73,), (0x015F,), (0x74,), (0x75,), (0xFC,), (0x77,), (0x79,), (0xFD,), (0x7A,)))

# TDS 616:2003 RHS for 8-bit Turkmen (duplicates ASCII in several places so presumably for a non-ASCII LHS?)
graphdata.gsets["ir232"] = (94, 1, (None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (0x41,), (0x42,), (0xC7,), (0x44,), (0x45,), (0xC4,), (0x46,), (0x47,), (0x48,), (0x49,), (0x4A,), (0x017D,), (0x4B,), (0x4C,), (0x4D,), (0x4E,), (0x0147,), (0x4F,), (0xD6,), (0x50,), (0x52,), (0x53,), (0x015E,), (0x54,), (0x55,), (0xDC,), (0x57,), (0x59,), (0xDD,), (0x5A,), None, (0x2116,), (0x61,), (0x62,), (0xE7,), (0x64,), (0x65,), (0xE4,), (0x66,), (0x67,), (0x68,), (0x69,), (0x6A,), (0x017E,), (0x6B,), (0x6C,), (0x6D,), (0x6E,), (0x0148,), (0x6F,), (0xF6,), (0x70,), (0x72,), (0x73,), (0x015F,), (0x74,), (0x75,), (0xFC,), (0x77,), (0x79,), (0xFD,), (0x7A,), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None))

# Windows code pages for non-Vietnamese Latin
graphdata.rhses["1250"] = parsers.read_single_byte("WHATWG/index-windows-1250.txt") # Central European
graphdata.rhses["1252"] = parsers.read_single_byte("WHATWG/index-windows-1252.txt") # ISO-8859-1 ext.
graphdata.defgsets["1252"] = ("ir006", "ir100", "nil", "nil")
graphdata.rhses["1254"] = parsers.read_single_byte("WHATWG/index-windows-1254.txt") # ISO-8859-9 ext.
graphdata.defgsets["1254"] = ("ir006", "ir148", "nil", "nil")
graphdata.rhses["1257"] = parsers.read_single_byte("WHATWG/index-windows-1257.txt") # Baltic

# OEM pages (TODO: OEM 210 Greek and OEM 220 Spanish are both listed by DEC in the very definition
#   of the DECSPPCS CSI control. I do not have a source for their layout.)
graphdata.rhses["437"] = parsers.read_single_byte("ICU/ibm-437_P100-1995.ucm") # United States
graphdata.defgsets["437"] = ("ir006", "nil", "nil", "nil") # Note: gets used as the default.
graphdata.rhses["775"] = parsers.read_single_byte("ICU/ibm-775_P100-1996.ucm") # Baltic
graphdata.rhses["850"] = parsers.read_single_byte("ICU/ibm-850_P100-1995.ucm") # Western European
graphdata.rhses["852"] = parsers.read_single_byte("ICU/ibm-852_P100-1995.ucm") # Central European
graphdata.rhses["857"] = parsers.read_single_byte("ICU/ibm-857_P100-1995.ucm") # Turkish
graphdata.rhses["858"] = parsers.read_single_byte("ICU/ibm-858_P100-1997.ucm") # New Western European
graphdata.rhses["860"] = parsers.read_single_byte("ICU/ibm-860_P100-1995.ucm") # Portugese
graphdata.rhses["861"] = parsers.read_single_byte("ICU/ibm-861_P100-1995.ucm") # Icelandic
graphdata.rhses["863"] = parsers.read_single_byte("ICU/ibm-863_P100-1995.ucm") # Quebecois French
graphdata.rhses["865"] = parsers.read_single_byte("ICU/ibm-865_P100-1995.ucm") # Nordic
graphdata.rhses["903"] = (None,) * 128
graphdata.defgsets["903"] = ("ir014", "nil", "nil", "nil")
graphdata.rhses["904"] = (None,) * 128
graphdata.defgsets["904"] = ("ir006", "nil", "nil", "nil")

# Macintosh pages
graphdata.rhses["10000"] = graphdata.rhses["1275"] = parsers.read_single_byte("WHATWG/index-macintosh.txt")
graphdata.rhses["10081"] = graphdata.rhses["1281"] = parsers.read_mozilla_ut_file("Mozilla/macturki.ut")
graphdata.rhses["10029"] = graphdata.rhses["1282"] = parsers.read_mozilla_ut_file("Mozilla/macce.ut")
graphdata.rhses["10082"] = graphdata.rhses["1284"] = parsers.read_mozilla_ut_file("Mozilla/maccroat.ut")
graphdata.rhses["10010"] = graphdata.rhses["1285"] = parsers.read_mozilla_ut_file("Mozilla/macro.ut")
graphdata.rhses["10079"] = graphdata.rhses["1286"] = parsers.read_mozilla_ut_file("Mozilla/macicela.ut")


